{"version":3,"file":"static/webpack/static/development/pages/leaderboard.js.cbc0b5227069c5c12c60.hot-update.js","sources":["webpack:///./pages/leaderboard.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport SearchBar from \"../src/components/SearchBar\";\nimport { fetchByUsername, getProfile } from \"../src/actions\";\nimport {\n  Container,\n  Grid,\n  Segment,\n  Icon,\n  Header,\n  Label,\n  Menu,\n  Table\n} from \"semantic-ui-react\";\n\n// show awards, i.e. most kills, most wins, highest kd etc etc in separate div\n\nclass Leaderboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { players: [], mode: \"SOLO\" };\n  }\n\n  handleRouteChange = async username => {\n    const { players } = this.state;\n    const newPlayer = await getProfile(username);\n    this.setState({ players: [...players, newPlayer] }, () =>\n      console.log(this.state.players)\n    );\n    const mode = \"solo\";\n    console.log(newPlayer.stats[`kd_${mode}`]);\n    // need to reset seach component after fetch\n  };\n\n  prefetchRoute = username => {\n    this.props.router.prefetch(`/profile/${username}`);\n  };\n\n  render() {\n    const { searchResults, fetchByUsername } = this.props;\n\n    const debouncedfetchByUsername = _.debounce(fetchByUsername, 500, {\n      maxWait: 1000\n    });\n\n    return (\n      <React.Fragment>\n        <Container\n          textAlign=\"center\"\n          style={{\n            paddingTop: \"200px\",\n            paddingBottom: \"100px\",\n            height: \"100%\"\n          }}\n        >\n          <h1>Leaderboard</h1>\n          <Grid columns=\"1\" centered textAlign=\"center\">\n            <Grid.Column\n              mobile=\"16\"\n              computer=\"6\"\n              largeScreen=\"6\"\n              tablet=\"6\"\n              widescreen=\"6\"\n            >\n              <Container>\n                <SearchBar\n                  handleRouteChange={this.handleRouteChange}\n                  prefetchRoute={this.prefetchRoute}\n                  fetchByUsername={debouncedfetchByUsername}\n                  results={searchResults}\n                />\n              </Container>\n            </Grid.Column>\n            <Grid.Column textAlign=\"center\">\n              <Container text style={{ marginTop: \"1em\" }}>\n                {/* ******************* */}\n                <Grid style={{ backgroundColor: \"#2c3c57\", color: \"white\" }}>\n                  <Grid.Row style={{ backgroundColor: \"#14c8ff\" }}>\n                    <Grid.Column>SOLO</Grid.Column>\n                  </Grid.Row>\n                  {/* <Divider clearing /> */}\n\n                  <Grid.Row columns=\"5\" stretched>\n                    <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                      <Header size=\"medium\" style={{ color: \"white\" }}>\n                        5.0\n                        <Header.Subheader style={{ color: \"#92a2bd\" }}>\n                          K/D\n                        </Header.Subheader>\n                      </Header>\n                    </Grid.Column>\n                    <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                      <Header size=\"medium\" style={{ color: \"white\" }}>\n                        300\n                        <Header.Subheader style={{ color: \"#92a2bd\" }}>\n                          Wins\n                        </Header.Subheader>\n                      </Header>\n                    </Grid.Column>\n                    <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                      <Header size=\"medium\" style={{ color: \"white\" }}>\n                        2100\n                        <Header.Subheader style={{ color: \"#92a2bd\" }}>\n                          Kills\n                        </Header.Subheader>\n                      </Header>\n                    </Grid.Column>\n                    <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                      <Header size=\"medium\" style={{ color: \"white\" }}>\n                        10.5\n                        <Header.Subheader style={{ color: \"#92a2bd\" }}>\n                          Win %\n                        </Header.Subheader>\n                      </Header>\n                    </Grid.Column>\n                    <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                      <Header size=\"medium\" style={{ color: \"white\" }}>\n                        10000\n                        <Header.Subheader style={{ color: \"#92a2bd\" }}>\n                          Matches\n                        </Header.Subheader>\n                      </Header>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                {/* ********************* */}\n              </Container>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchResults: state.search.searchResults\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ fetchByUsername }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Leaderboard);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAYA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AAkBA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAHA;AAIA;AACA;;;AAgcA;;;;AApHA;AACA;AAsHA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}