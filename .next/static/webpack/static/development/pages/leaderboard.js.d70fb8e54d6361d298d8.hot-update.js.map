{"version":3,"file":"static/webpack/static/development/pages/leaderboard.js.d70fb8e54d6361d298d8.hot-update.js","sources":["webpack:///./pages/leaderboard.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport SearchBar from \"../src/components/SearchBar\";\nimport { fetchByUsername, getProfile } from \"../src/actions\";\nimport {\n  Container,\n  Grid,\n  Segment,\n  Icon,\n  Label,\n  Menu,\n  Table\n} from \"semantic-ui-react\";\n\nclass Leaderboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { players: [] };\n  }\n\n  handleRouteChange = async username => {\n    const { players } = this.state;\n    const newPlayer = await getProfile(username);\n    this.setState({ players: [...players, newPlayer] });\n    console.log(newPlayer);\n    // need to reset seach component after fetch\n  };\n\n  prefetchRoute = username => {\n    this.props.router.prefetch(`/profile/${username}`);\n  };\n\n  render() {\n    const { searchResults, fetchByUsername } = this.props;\n\n    const debouncedfetchByUsername = _.debounce(fetchByUsername, 500, {\n      maxWait: 1000\n    });\n\n    return (\n      <React.Fragment>\n        <Container\n          textAlign=\"center\"\n          style={{\n            paddingTop: \"200px\",\n            paddingBottom: \"100px\",\n            height: \"100%\"\n          }}\n        >\n          <h1>Leaderboard</h1>\n          <Grid columns=\"1\" centered textAlign=\"center\">\n            <Grid.Column\n              mobile=\"16\"\n              computer=\"6\"\n              largeScreen=\"6\"\n              tablet=\"6\"\n              widescreen=\"6\"\n            >\n              <Container>\n                <SearchBar\n                  handleRouteChange={this.handleRouteChange}\n                  prefetchRoute={this.prefetchRoute}\n                  fetchByUsername={debouncedfetchByUsername}\n                  results={searchResults}\n                />\n              </Container>\n            </Grid.Column>\n            <Grid.Column textAlign=\"center\">\n              <Segment\n                padded\n                style={{\n                  backgroundColor: \"white\",\n                  height: \"200px\"\n                }}\n              >\n                <h2>NEWS</h2>\n                <h2>NEWS</h2>\n                <h2>NEWS</h2>\n              </Segment>\n              <Table celled>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Header</Table.HeaderCell>\n                    <Table.HeaderCell>Header</Table.HeaderCell>\n                    <Table.HeaderCell>Header</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>\n                      <Label ribbon>First</Label>\n                    </Table.Cell>\n                    <Table.Cell>Cell</Table.Cell>\n                    <Table.Cell>Cell</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Cell</Table.Cell>\n                    <Table.Cell>Cell</Table.Cell>\n                    <Table.Cell>Cell</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Cell</Table.Cell>\n                    <Table.Cell>Cell</Table.Cell>\n                    <Table.Cell>Cell</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n\n                <Table.Footer>\n                  <Table.Row>\n                    <Table.HeaderCell colSpan=\"3\">\n                      <Menu floated=\"right\" pagination>\n                        <Menu.Item as=\"a\" icon>\n                          <Icon name=\"chevron left\" />\n                        </Menu.Item>\n                        <Menu.Item as=\"a\">1</Menu.Item>\n                        <Menu.Item as=\"a\">2</Menu.Item>\n                        <Menu.Item as=\"a\">3</Menu.Item>\n                        <Menu.Item as=\"a\">4</Menu.Item>\n                        <Menu.Item as=\"a\" icon>\n                          <Icon name=\"chevron right\" />\n                        </Menu.Item>\n                      </Menu>\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Footer>\n              </Table>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchResults: state.search.searchResults\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ fetchByUsername }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Leaderboard);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AAeA;AACA;AACA;AAdA;AAAA;AAAA;AAHA;AAIA;AACA;;;AAaA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAWA;AAAA;AAYA;AAAA;AAmBA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAYA;;;;AAvHA;AACA;AAyHA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}