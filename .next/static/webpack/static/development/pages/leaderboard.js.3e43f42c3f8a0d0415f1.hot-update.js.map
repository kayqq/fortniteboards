{"version":3,"file":"static/webpack/static/development/pages/leaderboard.js.3e43f42c3f8a0d0415f1.hot-update.js","sources":["webpack:///./pages/leaderboard.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport {\n    Container,\n    Grid,\n    Table,\n    Icon,\n    Header,\n    TableHeader,\n    TableRow,\n    TableHeaderCell,\n    TableBody,\n    GridRow,\n    TableCell\n} from 'semantic-ui-react';\nimport SearchBar from '../src/components/SearchBar';\nimport { fetchByUsername, getProfile } from '../src/actions';\n\nimport Board from '../src/components/board';\n\n// show awards, i.e. most kills, most wins, highest kd etc etc in separate div\n\nclass Leaderboard extends Component {\n    static async getInitialProps({ store, query, pathname, asPath, req }) {\n        const { usernames, entries } = query;\n        // spread into array for mapping\n        let initialPlayers = [];\n\n        if (!usernames) return { initialPlayers };\n\n        if (entries <= 1) {\n            initialPlayers = await getProfile(usernames);\n        } else {\n            initialPlayers = await Promise.all(usernames.map(username => getProfile(username)));\n        }\n        return { initialPlayers, entries };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            players: [],\n            mode: 'solo',\n            columns: [],\n            column: null,\n            direction: null\n        };\n    }\n\n    handleSort = accessor => () => {\n        const { column, players, direction, mode } = this.state;\n        if (column !== accessor) {\n            let sortedPlayers = [];\n            if (accessor == 'username') {\n                sortedPlayers = _.sortBy(players, o => o.stats[`${accessor}_${mode}`]);\n            } else {\n                sortedPlayers = _.sortBy(this.state.players, o => o.username);\n            }\n            this.setState(\n                {\n                    column: accessor,\n                    players: sortedPlayers,\n                    direction: 'ascending'\n                },\n                () => this.updateURL()\n            );\n\n            return;\n        }\n\n        this.setState(\n            {\n                players: players.reverse(),\n                direction: direction === 'ascending' ? 'descending' : 'ascending'\n            },\n            () => this.updateURL()\n        );\n    };\n\n    componentDidMount() {\n        const { initialPlayers, entries } = this.props;\n        const { players } = this.state;\n        this.setState({\n            columns: [\n                {\n                    header: 'Player',\n                    accessor: 'username',\n                    size: '5',\n                    sort: this.handleSort(\n                        () => _.sortBy(this.state.players, o => o.username),\n                        'username'\n                    )\n                },\n                {\n                    header: 'K/D',\n                    accessor: 'kd',\n                    size: '2',\n                    sort: this.handleSort('kills')\n                },\n                {\n                    header: 'Win %',\n                    accessor: 'winrate',\n                    size: '2',\n                    sort: this.handleSort('winrate')\n                },\n                {\n                    header: 'Kills',\n                    accessor: 'kills',\n                    size: '2',\n                    sort: this.handleSort('kills')\n                },\n                {\n                    header: 'Wins',\n                    accessor: 'placetop1',\n                    size: '2',\n                    sort: this.handleSort('placetop1')\n                }\n            ],\n            players: entries <= 1 ? [...players, initialPlayers] : [...players, ...initialPlayers],\n            entries: entries\n        });\n    }\n\n    addPlayer = async username => {\n        const { players } = this.state;\n\n        const newPlayer = await getProfile(username);\n        const updatedPlayers = [...players, newPlayer];\n        this.setState({ players: updatedPlayers }, () => this.updateURL());\n    };\n\n    removePlayer = index => {\n        const { players } = this.state;\n        const updatedPlayers = players.filter((player, i) => i !== index);\n        this.setState({ players: updatedPlayers }, () => this.updateURL());\n    };\n\n    changeMode = direction => {\n        const { mode } = this.state;\n        let nextMode = '';\n        switch (mode) {\n            case 'solo':\n                nextMode = direction === 'forward' ? 'duo' : 'squad';\n                break;\n            case 'duo':\n                nextMode = direction === 'forward' ? 'squad' : 'solo';\n                break;\n            case 'squad':\n                nextMode = direction === 'forward' ? 'solo' : 'duo';\n                break;\n            default:\n                break;\n        }\n        this.setState({ mode: nextMode });\n    };\n\n    isPlayerSelected = username => {\n        const { players } = this.state;\n        return players.find(player => player.username === username);\n    };\n\n    updateURL = () => {\n        const { router } = this.props;\n        const { players } = this.state;\n        const usernames = players.map(player => player.username);\n        router.push({\n            pathname: '/leaderboard',\n            query: { entries: usernames.length, usernames: usernames },\n            options: { shallow: true }\n        });\n    };\n\n    render() {\n        const { columns, mode, players } = this.state;\n        const { searchResults, fetchByUsername } = this.props;\n        const debouncedfetchByUsername = _.debounce(fetchByUsername, 500, {\n            maxWait: 1000\n        });\n        return (\n            <div>\n                <Container\n                    text\n                    textAlign=\"center\"\n                    style={{\n                        paddingTop: '200px',\n                        paddingBottom: '100px',\n                        height: '100%'\n                    }}\n                >\n                    <h1>Board</h1>\n                    <Grid columns=\"1\" centered textAlign=\"center\">\n                        <Grid.Column\n                            mobile=\"16\"\n                            computer=\"6\"\n                            largeScreen=\"6\"\n                            tablet=\"6\"\n                            widescreen=\"6\"\n                        >\n                            <Container>\n                                <SearchBar\n                                    checkDuplicateSelect={this.isPlayerSelected}\n                                    handleResultSelect={this.addPlayer}\n                                    fetchByUsername={debouncedfetchByUsername}\n                                    results={searchResults}\n                                />\n                            </Container>\n                        </Grid.Column>\n                        <Grid.Column textAlign=\"center\">\n                            <Board\n                                columns={columns}\n                                mode={mode}\n                                players={players}\n                                removePlayer={this.removePlayer}\n                                handleModeChange={this.changeMode}\n                            />\n                        </Grid.Column>\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        {/*  */}\n                        <Grid.Column\n                            as={Table}\n                            textAlign=\"center\"\n                            sortable\n                            unstackable\n                            compact\n                            size=\"small\"\n                            style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                        >\n                            <Grid.Row as={TableHeader}>\n                                {/* MODE HEADER */}\n                                <Grid.Row as={TableRow}>\n                                    <Grid.Column as={TableHeaderCell}>LEFT</Grid.Column>\n                                    <Grid.Column as={TableHeaderCell}>SOLO</Grid.Column>\n                                    <Grid.Column as={TableHeaderCell}>RIGHT</Grid.Column>\n                                </Grid.Row>\n                                {/* STATS EHADER */}\n                                <Grid.Row as={TableRow}>\n                                    <Grid.Column\n                                        as={TableHeaderCell}\n                                        style={{ backgroundColor: '#2c3c57' }}\n                                        textAlign=\"center\"\n                                        verticalAlign=\"middle\"\n                                        mobile=\"1\"\n                                    >\n                                        <Header size=\"tiny\">\n                                            <Header.Subheader as=\"h6\" style={{ color: '#92a2bd' }}>\n                                                #\n                                            </Header.Subheader>\n                                        </Header>\n                                    </Grid.Column>\n                                    <Grid.Column\n                                        as={TableHeaderCell}\n                                        style={{ backgroundColor: '#2c3c57' }}\n                                        textAlign=\"left\"\n                                        verticalAlign=\"middle\"\n                                        mobile=\"5\"\n                                    >\n                                        <Header size=\"tiny\">\n                                            <Header.Subheader\n                                                as=\"h6\"\n                                                style={{\n                                                    color: '#92a2bd'\n                                                }}\n                                            >\n                                                Player\n                                            </Header.Subheader>\n                                        </Header>\n                                    </Grid.Column>\n                                    <Grid.Column\n                                        as={TableHeaderCell}\n                                        style={{ backgroundColor: '#2c3c57' }}\n                                        textAlign=\"left\"\n                                        verticalAlign=\"middle\"\n                                        mobile=\"2\"\n                                    >\n                                        <Header size=\"tiny\">\n                                            <Header.Subheader\n                                                as=\"h6\"\n                                                style={{\n                                                    color: '#92a2bd'\n                                                }}\n                                            >\n                                                K/D\n                                            </Header.Subheader>\n                                        </Header>\n                                    </Grid.Column>\n                                    <Grid.Column\n                                        as={TableHeaderCell}\n                                        style={{ backgroundColor: '#2c3c57' }}\n                                        textAlign=\"left\"\n                                        verticalAlign=\"middle\"\n                                        mobile=\"2\"\n                                    >\n                                        <Header size=\"tiny\">\n                                            <Header.Subheader\n                                                as=\"h6\"\n                                                style={{\n                                                    color: '#92a2bd'\n                                                }}\n                                            >\n                                                Win %\n                                            </Header.Subheader>\n                                        </Header>\n                                    </Grid.Column>\n                                    <Grid.Column\n                                        as={TableHeaderCell}\n                                        style={{ backgroundColor: '#2c3c57' }}\n                                        textAlign=\"left\"\n                                        verticalAlign=\"middle\"\n                                        mobile=\"2\"\n                                    >\n                                        <Header size=\"tiny\">\n                                            <Header.Subheader\n                                                as=\"h6\"\n                                                style={{\n                                                    color: '#92a2bd'\n                                                }}\n                                            >\n                                                Kills\n                                            </Header.Subheader>\n                                        </Header>\n                                    </Grid.Column>\n                                    <Grid.Column\n                                        as={TableHeaderCell}\n                                        style={{ backgroundColor: '#2c3c57' }}\n                                        textAlign=\"left\"\n                                        verticalAlign=\"middle\"\n                                        mobile=\"2\"\n                                    >\n                                        <Header size=\"tiny\">\n                                            <Header.Subheader\n                                                as=\"h6\"\n                                                style={{\n                                                    color: '#92a2bd'\n                                                }}\n                                            >\n                                                Wins\n                                            </Header.Subheader>\n                                        </Header>\n                                    </Grid.Column>\n                                    <Grid.Column\n                                        as={TableHeaderCell}\n                                        style={{ backgroundColor: '#2c3c57' }}\n                                        textAlign=\"center\"\n                                        verticalAlign=\"middle\"\n                                        mobile=\"1\"\n                                    />\n                                </Grid.Row>\n                            </Grid.Row>\n                            <Grid.Row as={TableBody}>\n                                <Grid.Row as={TableRow}>\n                                    <Grid.Column as={TableCell} width=\"1\">\n                                        1\n                                    </Grid.Column>\n                                    <Grid.Column as={TableCell}>\n                                        Ninja\n                                        <Header.Subheader\n                                            size=\"small\"\n                                            style={{ color: '#92a2bd', whiteSpace: 'nowrap' }}\n                                        >\n                                            286 Matches\n                                        </Header.Subheader>\n                                    </Grid.Column>\n                                    <Grid.Column as={TableCell}>6.93</Grid.Column>\n                                    <Grid.Column as={TableCell}>24.13</Grid.Column>\n                                    <Grid.Column as={TableCell}>1503</Grid.Column>\n                                    <Grid.Column as={TableCell}>69</Grid.Column>\n                                    <Grid.Column\n                                        as={TableCell}\n                                        size=\"small\"\n                                        icon=\"trash alternate outline\"\n                                    />\n                                </Grid.Row>\n                            </Grid.Row>\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResults: state.search.searchResults\n    };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ fetchByUsername }, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Leaderboard);\n\n{\n    /* <Table\n    sortable\n    unstackable\n    compact\n    size=\"small\"\n    style={{ backgroundColor: '#2c3c57', color: 'white' }}\n>\n    <Table.Header>\n        <Table.Row>\n            <Table.HeaderCell\n                textAlign=\"center\"\n                style={{ backgroundColor: '#2c3c57', color: 'white' }}\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        #\n                    </Header.Subheader>\n                </Header>{' '}\n            </Table.HeaderCell>\n            <Table.HeaderCell\n                style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                // sorted={column === 'username' ? direction : null}\n                onClick={this.handleSort(() => _.sortBy(players, o => o.username), 'username')}\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        Player\n                    </Header.Subheader>\n                </Header>\n            </Table.HeaderCell>\n            <Table.HeaderCell\n                textAlign=\"center\"\n                style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                // sorted={column === 'kd' ? direction : null}\n                onClick={this.handleSort(() => _.sortBy(players, o => o.stats[`kd_${mode}`]), 'kd')}\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        K/D\n                    </Header.Subheader>\n                </Header>\n            </Table.HeaderCell>\n            <Table.HeaderCell\n                textAlign=\"center\"\n                style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                // sorted={column === 'winrate' ? direction : null}\n                onClick={this.handleSort(\n                    () => _.sortBy(players, o => o.stats[`winrate_${mode}`]),\n                    'winrate'\n                )}\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        Win %\n                    </Header.Subheader>\n                </Header>\n            </Table.HeaderCell>\n            <Table.HeaderCell\n                textAlign=\"center\"\n                style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                // sorted={column === 'kills' ? direction : null}\n                onClick={this.handleSort(\n                    () => _.sortBy(players, o => o.stats[`kills_${mode}`]),\n                    'kills'\n                )}\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        Kills\n                    </Header.Subheader>\n                </Header>\n            </Table.HeaderCell>\n            <Table.HeaderCell\n                textAlign=\"center\"\n                style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                // sorted={column === 'wins' ? direction : null}\n                onClick={this.handleSort(\n                    () => _.sortBy(players, o => o.stats[`placetop1_${mode}`]),\n                    'wins'\n                )}\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        Wins\n                    </Header.Subheader>\n                </Header>\n            </Table.HeaderCell>\n        </Table.Row>\n    </Table.Header>\n    <Table.Body>\n        {_.map(players, (player, index) => (\n            <Table.Row key={player.username} verticalAlign=\"top\">\n                <Table.Cell>\n                    <Header as=\"h6\" style={{ color: '#92a2bd' }}>\n                        {index + 1}\n                    </Header>\n                </Table.Cell>\n                <Table.Cell singleLine>\n                    <Header as=\"h6\" style={{ color: 'white' }}>\n                        {player.username}\n\n                        <Header.Subheader size=\"small\" style={{ color: '#92a2bd' }}>\n                            {player.stats[`matchesplayed_${mode}`]} Matches\n                        </Header.Subheader>\n                    </Header>\n                </Table.Cell>\n                <Table.Cell singleLine textAlign=\"center\">\n                    <Header as=\"h4\" style={{ color: 'white' }}>\n                        {player.stats[`kd_${mode}`]}\n                    </Header>\n                </Table.Cell>\n                <Table.Cell singleLine textAlign=\"center\">\n                    <Header as=\"h4\" style={{ color: 'white' }}>\n                        {player.stats[`winrate_${mode}`]}\n                    </Header>\n                </Table.Cell>\n                <Table.Cell singleLine textAlign=\"center\">\n                    <Header as=\"h4\" style={{ color: 'white' }}>\n                        {player.stats[`kills_${mode}`]}\n                    </Header>\n                </Table.Cell>\n                <Table.Cell collapsing singleLine textAlign=\"center\">\n                    <Header as=\"h4\" style={{ color: 'white' }}>\n                        {player.stats[`placetop1_${mode}`]}\n                    </Header>\n                </Table.Cell>\n                <Table.Cell\n                    singleLine\n                    textAlign=\"center\"\n                    icon=\"trash alternate outline\"\n                    style={{\n                        color: 'red',\n                        fontSize: '12px',\n                        paddingLeft: '0px'\n                    }}\n                />\n            </Table.Row>\n        ))}\n    </Table.Body>\n</Table>; */\n}\n"],"mappings":"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","sourceRoot":""}