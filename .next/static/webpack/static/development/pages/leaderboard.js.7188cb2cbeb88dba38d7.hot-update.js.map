{"version":3,"file":"static/webpack/static/development/pages/leaderboard.js.7188cb2cbeb88dba38d7.hot-update.js","sources":["webpack:///./src/components/board/index.js"],"sourcesContent":["import React from 'react';\nimport { Grid, Rail, Sticky } from 'semantic-ui-react';\nimport ModeHeader from './ModeHeader';\nimport StatsHeader from './StatsHeader';\nimport Player from './Player';\n\n// const index = ({ columns, players, removePlayer, handleModeChange, mode }) => {\n//     return (\n//         <Grid style={{ backgroundColor: '#2c3c57', color: 'white' }}>\n//             <ModeHeader mode={mode} handleModeChange={handleModeChange} />\n//             <StatsHeader columns={columns} />\n//             {players.map((player, index) => (\n//                 <Player\n//                     key={index}\n//                     columns={columns}\n//                     player={player}\n//                     mode={mode}\n//                     boardIndex={index}\n//                     removePlayer={removePlayer}\n//                 />\n//             ))}\n//         </Grid>\n//     );\n// };\n\n// export default index;\n\nexport default class index extends React.Component {\n    state = {};\n\n    handleContextRef = contextRef => this.setState({ contextRef });\n    render() {\n        const { contextRef } = this.state;\n        const { columns, players, removePlayer, handleModeChange, mode } = this.props;\n        return (\n            <div ref={this.handleContextRef}>\n                <Grid\n                    ref={this.handleContextRef}\n                    style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                >\n                    <Rail internal attached>\n                        <Sticky context={contextRef} pushing>\n                            <ModeHeader mode={mode} handleModeChange={handleModeChange} />\n                        </Sticky>\n                    </Rail>\n\n                    <StatsHeader columns={columns} />\n                    {players.map((player, index) => (\n                        <Player\n                            key={index}\n                            columns={columns}\n                            player={player}\n                            mode={mode}\n                            boardIndex={index}\n                            removePlayer={removePlayer}\n                        />\n                    ))}\n                </Grid>\n            </div>\n        );\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAaA;;;;AAjCA;AACA;;;;;A","sourceRoot":""}