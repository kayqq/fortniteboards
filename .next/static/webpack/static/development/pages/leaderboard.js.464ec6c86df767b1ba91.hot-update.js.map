{"version":3,"file":"static/webpack/static/development/pages/leaderboard.js.464ec6c86df767b1ba91.hot-update.js","sources":["webpack:///./src/components/board/Player.js"],"sourcesContent":["import React from 'react';\nimport { Grid, Header } from 'semantic-ui-react';\n\nconst Player = ({ columns, mode, player, index }) => {\n    return (\n        <Grid.Row key={index} columns={columns.length} stretched>\n            {columns.map((column, columnIndex) => {\n                const columnContent =\n                    columnIndex === 0 // if first column\n                        ? player.username // get username\n                        : player.stats[`${column.accessor}_${mode}`]; // else get stats\n                return (\n                    <Grid.Column\n                        className={columnIndex == 0 ? '' : 'compact'}\n                        key={columnIndex}\n                        textAlign={columnIndex == 0 ? 'left' : 'center'}\n                        verticalAlign=\"middle\"\n                        mobile={column.size}\n                    >\n                        <Header as={columnIndex == 0 ? 'h6' : 'h4'} style={{ color: 'white' }}>\n                            {columnContent}\n                            {columnIndex == 0 ? (\n                                <Header as=\"h6\" style={{ color: '#92a2bd' }}>\n                                    {player.stats[`matchesplayed_${mode}`]} Matches\n                                </Header>\n                            ) : null}\n                        </Header>\n                    </Grid.Column>\n                );\n            })}\n            <Grid.Column className=\"compact\" textAlign=\"center\" mobile=\"1\">\n                X\n            </Grid.Column>\n        </Grid.Row>\n    );\n};\n\nexport default Player;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}