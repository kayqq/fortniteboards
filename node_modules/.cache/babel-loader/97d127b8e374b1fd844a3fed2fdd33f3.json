{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { Grid, Header, Table, TableHeader, TableHeaderCell } from 'semantic-ui-react';\n\nvar StatsHeader = function StatsHeader(_ref) {\n  var _React$createElement;\n\n  var columns = _ref.columns,\n      activeColumnSort = _ref.activeColumnSort,\n      sortPlayers = _ref.sortPlayers;\n  return React.createElement(Grid.Row, {\n    as: TableHeader,\n    columns: columns.length,\n    stretched: true\n  }, React.createElement(Grid.Column, (_React$createElement = {\n    as: TableHeaderCell,\n    style: {\n      backgroundColor: activeColumnSort == '#' ? 'black' : '#2c3c57'\n    }\n  }, _defineProperty(_React$createElement, \"as\", Table.HeaderCell), _defineProperty(_React$createElement, \"textAlign\", \"center\"), _defineProperty(_React$createElement, \"verticalAlign\", \"middle\"), _defineProperty(_React$createElement, \"mobile\", \"1\"), _defineProperty(_React$createElement, \"onClick\", function onClick() {\n    sortPlayers('#');\n  }), _React$createElement), React.createElement(Header, {\n    size: \"tiny\"\n  }, React.createElement(Header.Subheader, {\n    as: \"h6\",\n    style: {\n      color: activeColumnSort == '#' ? 'yellow' : '#92a2bd'\n    }\n  }, \"#\"))), columns.map(function (column, index) {\n    return React.createElement(Grid.Column, {\n      style: {\n        backgroundColor: activeColumnSort == column.header ? 'black' : '#2c3c57'\n      },\n      as: Table.HeaderCell,\n      className: index == 0 ? '' : 'compact',\n      key: index,\n      onClick: function onClick() {\n        sortPlayers(column.header);\n      },\n      textAlign: index == 0 ? 'left' : 'center',\n      verticalAlign: \"middle\",\n      mobile: column.size\n    }, React.createElement(Header, {\n      size: \"tiny\"\n    }, React.createElement(Header.Subheader, {\n      as: \"h6\",\n      style: {\n        color: activeColumnSort == column.header ? 'yellow' : '#92a2bd'\n      }\n    }, column.header)));\n  }));\n};\n\nexport default StatsHeader;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/board/StatsHeader.js"],"names":["React","Grid","Header","Table","TableHeader","TableHeaderCell","StatsHeader","columns","activeColumnSort","sortPlayers","length","backgroundColor","HeaderCell","color","map","column","index","header","size"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,WAA9B,EAA2CC,eAA3C,QAAkE,mBAAlE;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgD;AAAA;;AAAA,MAA7CC,OAA6C,QAA7CA,OAA6C;AAAA,MAApCC,gBAAoC,QAApCA,gBAAoC;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAChE,SACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,EAAE,EAAEL,WAAd;AAA2B,IAAA,OAAO,EAAEG,OAAO,CAACG,MAA5C;AAAoD,IAAA,SAAS;AAA7D,KAEI,oBAAC,IAAD,CAAM,MAAN;AACI,IAAA,EAAE,EAAEL,eADR;AAEI,IAAA,KAAK,EAAE;AAAEM,MAAAA,eAAe,EAAEH,gBAAgB,IAAI,GAApB,GAA0B,OAA1B,GAAoC;AAAvD;AAFX,iDAGQL,KAAK,CAACS,UAHd,sDAIc,QAJd,0DAKkB,QALlB,mDAMW,GANX,oDAOa,mBAAM;AACXH,IAAAA,WAAW,CAAC,GAAD,CAAX;AACH,GATL,0BAWI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC;AAAb,KACI,oBAAC,MAAD,CAAQ,SAAR;AACI,IAAA,EAAE,EAAC,IADP;AAEI,IAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAAEL,gBAAgB,IAAI,GAApB,GAA0B,QAA1B,GAAqC;AADzC;AAFX,SADJ,CAXJ,CAFJ,EA0BKD,OAAO,CAACO,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT;AAAA,WACT,oBAAC,IAAD,CAAM,MAAN;AACI,MAAA,KAAK,EAAE;AACHL,QAAAA,eAAe,EAAEH,gBAAgB,IAAIO,MAAM,CAACE,MAA3B,GAAoC,OAApC,GAA8C;AAD5D,OADX;AAII,MAAA,EAAE,EAAEd,KAAK,CAACS,UAJd;AAKI,MAAA,SAAS,EAAEI,KAAK,IAAI,CAAT,GAAa,EAAb,GAAkB,SALjC;AAMI,MAAA,GAAG,EAAEA,KANT;AAOI,MAAA,OAAO,EAAE,mBAAM;AACXP,QAAAA,WAAW,CAACM,MAAM,CAACE,MAAR,CAAX;AACH,OATL;AAUI,MAAA,SAAS,EAAED,KAAK,IAAI,CAAT,GAAa,MAAb,GAAsB,QAVrC;AAWI,MAAA,aAAa,EAAC,QAXlB;AAYI,MAAA,MAAM,EAAED,MAAM,CAACG;AAZnB,OAcI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,OACI,oBAAC,MAAD,CAAQ,SAAR;AACI,MAAA,EAAE,EAAC,IADP;AAEI,MAAA,KAAK,EAAE;AACHL,QAAAA,KAAK,EAAEL,gBAAgB,IAAIO,MAAM,CAACE,MAA3B,GAAoC,QAApC,GAA+C;AADnD;AAFX,OAMKF,MAAM,CAACE,MANZ,CADJ,CAdJ,CADS;AAAA,GAAZ,CA1BL,CADJ;AAsJH,CAvJD;;AAyJA,eAAeX,WAAf","sourcesContent":["import React from 'react';\nimport { Grid, Header, Table, TableHeader, TableHeaderCell } from 'semantic-ui-react';\n\nconst StatsHeader = ({ columns, activeColumnSort, sortPlayers }) => {\n    return (\n        <Grid.Row as={TableHeader} columns={columns.length} stretched>\n            {/* Rank header */}\n            <Grid.Column\n                as={TableHeaderCell}\n                style={{ backgroundColor: activeColumnSort == '#' ? 'black' : '#2c3c57' }}\n                as={Table.HeaderCell}\n                textAlign=\"center\"\n                verticalAlign=\"middle\"\n                mobile=\"1\"\n                onClick={() => {\n                    sortPlayers('#');\n                }}\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: activeColumnSort == '#' ? 'yellow' : '#92a2bd'\n                        }}\n                    >\n                        #\n                    </Header.Subheader>\n                </Header>\n            </Grid.Column>\n\n            {/* Stats headers */}\n            {columns.map((column, index) => (\n                <Grid.Column\n                    style={{\n                        backgroundColor: activeColumnSort == column.header ? 'black' : '#2c3c57'\n                    }}\n                    as={Table.HeaderCell}\n                    className={index == 0 ? '' : 'compact'}\n                    key={index}\n                    onClick={() => {\n                        sortPlayers(column.header);\n                    }}\n                    textAlign={index == 0 ? 'left' : 'center'}\n                    verticalAlign=\"middle\"\n                    mobile={column.size}\n                >\n                    <Header size=\"tiny\">\n                        <Header.Subheader\n                            as=\"h6\"\n                            style={{\n                                color: activeColumnSort == column.header ? 'yellow' : '#92a2bd'\n                            }}\n                        >\n                            {column.header}\n                        </Header.Subheader>\n                    </Header>\n                </Grid.Column>\n            ))}\n            {/* <Grid.Column\n                style={{ backgroundColor: '#2c3c57' }}\n                as={Table.HeaderCell}\n                textAlign=\"left\"\n                verticalAlign=\"middle\"\n                mobile=\"5\"\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        Player\n                    </Header.Subheader>\n                </Header>\n            </Grid.Column>\n            <Grid.Column\n                style={{ backgroundColor: '#2c3c57' }}\n                as={Table.HeaderCell}\n                className=\"compact\"\n                textAlign=\"center\"\n                verticalAlign=\"middle\"\n                mobile=\"2\"\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        K/D\n                    </Header.Subheader>\n                </Header>\n            </Grid.Column>\n            <Grid.Column\n                style={{ backgroundColor: '#2c3c57' }}\n                as={Table.HeaderCell}\n                className=\"compact\"\n                textAlign=\"center\"\n                verticalAlign=\"middle\"\n                mobile=\"2\"\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        Win %\n                    </Header.Subheader>\n                </Header>\n            </Grid.Column>\n            <Grid.Column\n                style={{ backgroundColor: '#2c3c57' }}\n                as={Table.HeaderCell}\n                className=\"compact\"\n                textAlign=\"center\"\n                verticalAlign=\"middle\"\n                mobile=\"2\"\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        Kills\n                    </Header.Subheader>\n                </Header>\n            </Grid.Column>\n            <Grid.Column\n                style={{ backgroundColor: '#2c3c57' }}\n                as={Table.HeaderCell}\n                className=\"compact\"\n                textAlign=\"center\"\n                verticalAlign=\"middle\"\n                mobile=\"2\"\n            >\n                <Header size=\"tiny\">\n                    <Header.Subheader\n                        as=\"h6\"\n                        style={{\n                            color: '#92a2bd'\n                        }}\n                    >\n                        Wins\n                    </Header.Subheader>\n                </Header>\n            </Grid.Column> */}\n        </Grid.Row>\n    );\n};\n\nexport default StatsHeader;\n"]},"metadata":{},"sourceType":"module"}