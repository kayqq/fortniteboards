{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Menu, Icon, Segment, Responsive, Sticky } from 'semantic-ui-react';\nimport { Link } from \"../../routes\";\nimport SearchBar from \"./SearchBar\";\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n    _this.state = {\n      searchVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Segment, {\n        style: {\n          backgroundColor: '#4a4a4a',\n          color: 'white'\n        },\n        textAlign: \"center\",\n        vertical: true\n      }, React.createElement(Container, null, React.createElement(Sticky, null, React.createElement(Menu, {\n        pointing: true,\n        fixed: true,\n        secondary: true,\n        size: \"large\",\n        style: {\n          backgroundColor: '#4a4a4a',\n          color: 'white'\n        }\n      }, this.state.searchVisible ? React.createElement(SearchBar, null) : React.createElement(React.Fragment, null, React.createElement(Menu.Item, {\n        as: \"a\",\n        ctive: true,\n        style: {\n          color: 'white'\n        }\n      }, React.createElement(Link, {\n        as: \"a\",\n        route: \"/\"\n      }, React.createElement(\"span\", {\n        as: \"a\"\n      }, \"Home\"))), React.createElement(Menu.Item, {\n        style: {\n          color: 'white'\n        }\n      }, React.createElement(Link, {\n        route: \"/leaderboard\"\n      }, React.createElement(\"span\", null, \"Create\")))), React.createElement(Responsive, {\n        as: Menu.Item,\n        style: {\n          width: '40px',\n          color: 'grey'\n        },\n        minWidth: Responsive.onlyTablet.minWidth,\n        icon: true,\n        onClick: function onClick() {\n          return console.log('clicked!');\n        }\n      }, React.createElement(SearchBar, null)), React.createElement(Responsive, {\n        as: Menu.Item,\n        icon: true,\n        position: \"right\",\n        style: {\n          color: 'grey'\n        },\n        onClick: function onClick() {\n          return console.log('clicked!');\n        },\n        maxWidth: Responsive.onlyMobile.maxWidth\n      }, React.createElement(Icon, {\n        name: \"bars\",\n        size: \"large\"\n      }))))));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport { Navbar as default };","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/Navbar.js"],"names":["React","Component","Container","Menu","Icon","Segment","Responsive","Sticky","Link","SearchBar","Navbar","props","state","searchVisible","backgroundColor","color","Item","width","onlyTablet","minWidth","console","log","onlyMobile","maxWidth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,UAAzC,EAAqDC,MAArD,QAAmE,mBAAnE;AACA,SAASC,IAAT;AACA,OAAOC,SAAP;;IAEqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AADN,KAAb;AAHe;AAMlB;;;;6BAEQ;AACL,aACI,oBAAC,OAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,KAAK,EAAE;AAArC,SADX;AAEI,QAAA,SAAS,EAAC,QAFd;AAGI,QAAA,QAAQ;AAHZ,SAKI,oBAAC,SAAD,QACI,oBAAC,MAAD,QACI,oBAAC,IAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,MAFT;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,IAAI,EAAC,OAJT;AAKI,QAAA,KAAK,EAAE;AAAED,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,KAAK,EAAE;AAArC;AALX,SAOK,KAAKH,KAAL,CAAWC,aAAX,GACG,oBAAC,SAAD,OADH,GAGG,oBAAC,KAAD,CAAO,QAAP,QACI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,EAAE,EAAC,GAAd;AAAkB,QAAA,KAAK,MAAvB;AAAwB,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAA/B,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,KAAK,EAAC;AAAnB,SACI;AAAM,QAAA,EAAE,EAAC;AAAT,gBADJ,CADJ,CADJ,EAMI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT;AAAlB,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ,SACI,2CADJ,CADJ,CANJ,CAVR,EAqCI,oBAAC,UAAD;AACI,QAAA,EAAE,EAAEZ,IAAI,CAACa,IADb;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBF,UAAAA,KAAK,EAAE;AAAxB,SAFX;AAGI,QAAA,QAAQ,EAAET,UAAU,CAACY,UAAX,CAAsBC,QAHpC;AAII,QAAA,IAAI,MAJR;AAKI,QAAA,OAAO,EAAE;AAAA,iBAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAAA;AALb,SAYI,oBAAC,SAAD,OAZJ,CArCJ,EAqDI,oBAAC,UAAD;AACI,QAAA,EAAE,EAAElB,IAAI,CAACa,IADb;AAEI,QAAA,IAAI,MAFR;AAGI,QAAA,QAAQ,EAAC,OAHb;AAII,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT,SAJX;AAKI,QAAA,OAAO,EAAE;AAAA,iBAAMK,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAAA,SALb;AAMI,QAAA,QAAQ,EAAEf,UAAU,CAACgB,UAAX,CAAsBC;AANpC,SAQI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,IAAI,EAAC;AAAvB,QARJ,CArDJ,CADJ,CADJ,CALJ,CADJ;AA4EH;;;;EAtF+BtB,S;;SAAfS,M","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Menu, Icon, Segment, Responsive, Sticky } from 'semantic-ui-react';\nimport { Link } from '../../routes';\nimport SearchBar from './SearchBar';\n\nexport default class Navbar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchVisible: false\n        };\n    }\n\n    render() {\n        return (\n            <Segment\n                style={{ backgroundColor: '#4a4a4a', color: 'white' }}\n                textAlign=\"center\"\n                vertical\n            >\n                <Container>\n                    <Sticky>\n                        <Menu\n                            pointing\n                            fixed\n                            secondary\n                            size=\"large\"\n                            style={{ backgroundColor: '#4a4a4a', color: 'white' }}\n                        >\n                            {this.state.searchVisible ? (\n                                <SearchBar />\n                            ) : (\n                                <React.Fragment>\n                                    <Menu.Item as=\"a\" ctive style={{ color: 'white' }}>\n                                        <Link as=\"a\" route=\"/\">\n                                            <span as=\"a\">Home</span>\n                                        </Link>\n                                    </Menu.Item>\n                                    <Menu.Item style={{ color: 'white' }}>\n                                        <Link route=\"/leaderboard\">\n                                            <span>Create</span>\n                                        </Link>\n                                    </Menu.Item>\n                                    {/* <Responsive {...Responsive.onlyMobile} maxWidth={425}>\n                                        <Menu.Item\n                                            as=\"a\"\n                                            icon\n                                            position=\"right\"\n                                            active\n                                            style={{ color: \"grey\" }}\n                                            onClick={() => this.setState({ searchVisible: true })}\n                                        >\n                                            <Icon name=\"search\" size=\"large\" />\n                                        </Menu.Item>\n                                    </Responsive> */}\n                                </React.Fragment>\n                            )}\n\n                            {/* DESKTOP SEARCH */}\n                            <Responsive\n                                as={Menu.Item}\n                                style={{ width: '40px', color: 'grey' }}\n                                minWidth={Responsive.onlyTablet.minWidth}\n                                icon\n                                onClick={() => console.log('clicked!')}\n                            >\n                                {/* {console.log('COMPUTER', Responsive.onlyComputer)}\n                            {console.log('WIDESCREEN', Responsive.onlyWidescreen)}\n                            {console.log('TABLET', Responsive.onlyTablet)}\n                            {console.log('LARGE SCREEN', Responsive.onlyLargeScreen)}\n                            {console.log('MOBILE', Responsive.onlyLargeScreen)} */}\n                                <SearchBar />\n                            </Responsive>\n\n                            {/* BARS */}\n                            <Responsive\n                                as={Menu.Item}\n                                icon\n                                position=\"right\"\n                                style={{ color: 'grey' }}\n                                onClick={() => console.log('clicked!')}\n                                maxWidth={Responsive.onlyMobile.maxWidth}\n                            >\n                                <Icon name=\"bars\" size=\"large\" />\n                            </Responsive>\n                        </Menu>\n                    </Sticky>\n                </Container>\n            </Segment>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}