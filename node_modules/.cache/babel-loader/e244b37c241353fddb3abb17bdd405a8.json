{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Menu, Icon, Segment, Responsive, Sticky } from 'semantic-ui-react';\nimport { Link } from \"../../routes\";\nimport SearchBar from \"./SearchBar\";\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n    _this.state = {\n      searchVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"render\",\n    value: function render() {\n      return (// <Segment\n        //     style={{ backgroundColor: '#4a4a4a', color: 'white' }}\n        //     textAlign=\"center\"\n        //     vertical\n        // >\n        //     <Container>\n        React.createElement(Sticky, null, React.createElement(Menu, {\n          pointing: true,\n          fixed: true,\n          secondary: true,\n          size: \"large\",\n          style: {\n            backgroundColor: '#4a4a4a',\n            color: 'white'\n          }\n        }, this.state.searchVisible ? React.createElement(SearchBar, null) : React.createElement(React.Fragment, null, React.createElement(Menu.Item, {\n          as: \"a\",\n          ctive: true,\n          style: {\n            color: 'white'\n          }\n        }, React.createElement(Link, {\n          as: \"a\",\n          route: \"/\"\n        }, React.createElement(\"span\", {\n          as: \"a\"\n        }, \"Home\"))), React.createElement(Menu.Item, {\n          style: {\n            color: 'white'\n          }\n        }, React.createElement(Link, {\n          route: \"/leaderboard\"\n        }, React.createElement(\"span\", null, \"Create\")))), React.createElement(Responsive, {\n          as: Menu.Item,\n          style: {\n            width: '40px',\n            color: 'grey'\n          },\n          minWidth: Responsive.onlyTablet.minWidth,\n          icon: true,\n          onClick: function onClick() {\n            return console.log('clicked!');\n          }\n        }, React.createElement(SearchBar, null)), React.createElement(Responsive, {\n          as: Menu.Item,\n          icon: true,\n          position: \"right\",\n          style: {\n            color: 'grey'\n          },\n          onClick: function onClick() {\n            return console.log('clicked!');\n          },\n          maxWidth: Responsive.onlyMobile.maxWidth\n        }, React.createElement(Icon, {\n          name: \"bars\",\n          size: \"large\"\n        })))) //     </Container>\n        // </Segment>\n\n      );\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport { Navbar as default };","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/Navbar.js"],"names":["React","Component","Container","Menu","Icon","Segment","Responsive","Sticky","Link","SearchBar","Navbar","props","state","searchVisible","backgroundColor","color","Item","width","onlyTablet","minWidth","console","log","onlyMobile","maxWidth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,UAAzC,EAAqDC,MAArD,QAAmE,mBAAnE;AACA,SAASC,IAAT;AACA,OAAOC,SAAP;;IAEqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AADN,KAAb;AAHe;AAMlB;;;;6BAEQ;AACL,aACI;AACA;AACA;AACA;AACA;AACA;AACA,4BAAC,MAAD,QACI,oBAAC,IAAD;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,KAAK,MAFT;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,SAAnB;AAA8BC,YAAAA,KAAK,EAAE;AAArC;AALX,WAOK,KAAKH,KAAL,CAAWC,aAAX,GACG,oBAAC,SAAD,OADH,GAGG,oBAAC,KAAD,CAAO,QAAP,QACI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,EAAE,EAAC,GAAd;AAAkB,UAAA,KAAK,MAAvB;AAAwB,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT;AAA/B,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,KAAK,EAAC;AAAnB,WACI;AAAM,UAAA,EAAE,EAAC;AAAT,kBADJ,CADJ,CADJ,EAMI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAAEA,YAAAA,KAAK,EAAE;AAAT;AAAlB,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAC;AAAZ,WACI,2CADJ,CADJ,CANJ,CAVR,EAqCI,oBAAC,UAAD;AACI,UAAA,EAAE,EAAEZ,IAAI,CAACa,IADb;AAEI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,MAAT;AAAiBF,YAAAA,KAAK,EAAE;AAAxB,WAFX;AAGI,UAAA,QAAQ,EAAET,UAAU,CAACY,UAAX,CAAsBC,QAHpC;AAII,UAAA,IAAI,MAJR;AAKI,UAAA,OAAO,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAAA;AALb,WAYI,oBAAC,SAAD,OAZJ,CArCJ,EAqDI,oBAAC,UAAD;AACI,UAAA,EAAE,EAAElB,IAAI,CAACa,IADb;AAEI,UAAA,IAAI,MAFR;AAGI,UAAA,QAAQ,EAAC,OAHb;AAII,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WAJX;AAKI,UAAA,OAAO,EAAE;AAAA,mBAAMK,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAAA,WALb;AAMI,UAAA,QAAQ,EAAEf,UAAU,CAACgB,UAAX,CAAsBC;AANpC,WAQI,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,IAAI,EAAC;AAAvB,UARJ,CArDJ,CADJ,CAPJ,CAyEI;AACA;;AA1EJ;AA4EH;;;;EAtF+BtB,S;;SAAfS,M","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Menu, Icon, Segment, Responsive, Sticky } from 'semantic-ui-react';\nimport { Link } from '../../routes';\nimport SearchBar from './SearchBar';\n\nexport default class Navbar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchVisible: false\n        };\n    }\n\n    render() {\n        return (\n            // <Segment\n            //     style={{ backgroundColor: '#4a4a4a', color: 'white' }}\n            //     textAlign=\"center\"\n            //     vertical\n            // >\n            //     <Container>\n            <Sticky>\n                <Menu\n                    pointing\n                    fixed\n                    secondary\n                    size=\"large\"\n                    style={{ backgroundColor: '#4a4a4a', color: 'white' }}\n                >\n                    {this.state.searchVisible ? (\n                        <SearchBar />\n                    ) : (\n                        <React.Fragment>\n                            <Menu.Item as=\"a\" ctive style={{ color: 'white' }}>\n                                <Link as=\"a\" route=\"/\">\n                                    <span as=\"a\">Home</span>\n                                </Link>\n                            </Menu.Item>\n                            <Menu.Item style={{ color: 'white' }}>\n                                <Link route=\"/leaderboard\">\n                                    <span>Create</span>\n                                </Link>\n                            </Menu.Item>\n                            {/* <Responsive {...Responsive.onlyMobile} maxWidth={425}>\n                                        <Menu.Item\n                                            as=\"a\"\n                                            icon\n                                            position=\"right\"\n                                            active\n                                            style={{ color: \"grey\" }}\n                                            onClick={() => this.setState({ searchVisible: true })}\n                                        >\n                                            <Icon name=\"search\" size=\"large\" />\n                                        </Menu.Item>\n                                    </Responsive> */}\n                        </React.Fragment>\n                    )}\n\n                    {/* DESKTOP SEARCH */}\n                    <Responsive\n                        as={Menu.Item}\n                        style={{ width: '40px', color: 'grey' }}\n                        minWidth={Responsive.onlyTablet.minWidth}\n                        icon\n                        onClick={() => console.log('clicked!')}\n                    >\n                        {/* {console.log('COMPUTER', Responsive.onlyComputer)}\n                            {console.log('WIDESCREEN', Responsive.onlyWidescreen)}\n                            {console.log('TABLET', Responsive.onlyTablet)}\n                            {console.log('LARGE SCREEN', Responsive.onlyLargeScreen)}\n                            {console.log('MOBILE', Responsive.onlyLargeScreen)} */}\n                        <SearchBar />\n                    </Responsive>\n\n                    {/* BARS */}\n                    <Responsive\n                        as={Menu.Item}\n                        icon\n                        position=\"right\"\n                        style={{ color: 'grey' }}\n                        onClick={() => console.log('clicked!')}\n                        maxWidth={Responsive.onlyMobile.maxWidth}\n                    >\n                        <Icon name=\"bars\" size=\"large\" />\n                    </Responsive>\n                </Menu>\n            </Sticky>\n            //     </Container>\n            // </Segment>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}