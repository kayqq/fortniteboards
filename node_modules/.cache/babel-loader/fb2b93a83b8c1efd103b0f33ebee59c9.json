{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from \"react\"; // import Link from \"next/link\";\n\nimport { Link } from \"../../routes\";\nimport SearchBar from \"../components/SearchBar\";\nimport { Button, Container, Menu, Icon, Segment, Visibility, Responsive, Grid } from \"semantic-ui-react\";\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n    _this.state = {\n      searchVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(Segment, {\n        style: {\n          backgroundColor: \"#4a4a4a\",\n          color: \"white\"\n        },\n        textAlign: \"center\",\n        vertical: true\n      }, React.createElement(Container, null, React.createElement(Menu, {\n        pointing: true,\n        secondary: true,\n        size: \"large\",\n        style: {\n          backgroundColor: \"#4a4a4a\",\n          color: \"white\"\n        }\n      }, this.state.searchVisible ? React.createElement(SearchBar, null) : React.createElement(React.Fragment, null, React.createElement(Menu.Item, {\n        active: true,\n        style: {\n          color: \"white\"\n        }\n      }, React.createElement(Link, {\n        route: \"/\"\n      }, React.createElement(\"span\", null, \"Home\"))), React.createElement(Menu.Item, {\n        style: {\n          color: \"white\"\n        }\n      }, React.createElement(Link, {\n        route: \"/leaderboard\"\n      }, React.createElement(\"span\", null, \"Create\")))), React.createElement(Responsive, (_React$createElement = {\n        as: Menu.Item,\n        style: {\n          width: \"40px\"\n        },\n        minWidth: Responsive.onlyTablet.minWidth,\n        icon: true\n      }, _defineProperty(_React$createElement, \"style\", {\n        color: \"grey\"\n      }), _defineProperty(_React$createElement, \"onClick\", function onClick() {\n        return console.log(\"clicked!\");\n      }), _React$createElement), console.log(\"COMPUTER\", Responsive.onlyComputer), console.log(\"WIDESCREEN\", Responsive.onlyWidescreen), console.log(\"TABLET\", Responsive.onlyTablet), console.log(\"LARGE SCREEN\", Responsive.onlyLargeScreen), console.log(\"MOBILE\", Responsive.onlyLargeScreen), React.createElement(SearchBar, null)), React.createElement(Responsive, {\n        as: Menu.Item,\n        icon: true,\n        position: \"right\",\n        style: {\n          color: \"grey\"\n        },\n        onClick: function onClick() {\n          return console.log(\"clicked!\");\n        },\n        maxWidth: Responsive.onlyMobile.maxWidth\n      }, React.createElement(Icon, {\n        name: \"bars\",\n        size: \"large\"\n      })))));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport { Navbar as default };","map":{"version":3,"sources":["/Users/kenny/Desktop/test nextjs 8/src/components/Navbar.js"],"names":["React","Component","Link","SearchBar","Button","Container","Menu","Icon","Segment","Visibility","Responsive","Grid","Navbar","props","state","searchVisible","backgroundColor","color","Item","width","onlyTablet","minWidth","console","log","onlyComputer","onlyWidescreen","onlyLargeScreen","onlyMobile","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import Link from \"next/link\";\nimport { Link } from \"../../routes\";\nimport SearchBar from \"../components/SearchBar\";\n\nimport {\n  Button,\n  Container,\n  Menu,\n  Icon,\n  Segment,\n  Visibility,\n  Responsive,\n  Grid\n} from \"semantic-ui-react\";\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchVisible: false\n    };\n  }\n\n  render() {\n    return (\n      <Segment\n        style={{ backgroundColor: \"#4a4a4a\", color: \"white\" }}\n        textAlign=\"center\"\n        vertical\n      >\n        <Container>\n          <Menu\n            pointing\n            secondary\n            size=\"large\"\n            style={{ backgroundColor: \"#4a4a4a\", color: \"white\" }}\n          >\n            {this.state.searchVisible ? (\n              <SearchBar />\n            ) : (\n              <React.Fragment>\n                <Menu.Item active style={{ color: \"white\" }}>\n                  <Link route=\"/\">\n                    <span>Home</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item style={{ color: \"white\" }}>\n                  <Link route=\"/leaderboard\">\n                    <span>Create</span>\n                  </Link>\n                </Menu.Item>\n                {/* <Responsive {...Responsive.onlyMobile} maxWidth={425}>\n                  <Menu.Item\n                    as=\"a\"\n                    icon\n                    position=\"right\"\n                    active\n                    style={{ color: \"grey\" }}\n                    onClick={() => this.setState({ searchVisible: true })}\n                  >\n                    <Icon name=\"search\" size=\"large\" />\n                  </Menu.Item>\n                </Responsive> */}\n              </React.Fragment>\n            )}\n\n            {/* DESKTOP SEARCH */}\n            <Responsive\n              as={Menu.Item}\n              style={{ width: \"40px\" }}\n              minWidth={Responsive.onlyTablet.minWidth}\n              icon\n              style={{ color: \"grey\" }}\n              onClick={() => console.log(\"clicked!\")}\n            >\n              {console.log(\"COMPUTER\", Responsive.onlyComputer)}\n              {console.log(\"WIDESCREEN\", Responsive.onlyWidescreen)}\n              {console.log(\"TABLET\", Responsive.onlyTablet)}\n              {console.log(\"LARGE SCREEN\", Responsive.onlyLargeScreen)}\n              {console.log(\"MOBILE\", Responsive.onlyLargeScreen)}\n              <SearchBar />\n            </Responsive>\n\n            {/* BARS */}\n            <Responsive\n              as={Menu.Item}\n              icon\n              position=\"right\"\n              style={{ color: \"grey\" }}\n              onClick={() => console.log(\"clicked!\")}\n              maxWidth={Responsive.onlyMobile.maxWidth}\n            >\n              <Icon name=\"bars\" size=\"large\" />\n            </Responsive>\n          </Menu>\n        </Container>\n      </Segment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}