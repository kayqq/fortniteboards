{"ast":null,"code":"import React from 'react';\nimport { Grid, Header, Icon } from 'semantic-ui-react';\n\nvar Player = function Player(_ref) {\n  var columns = _ref.columns,\n      mode = _ref.mode,\n      player = _ref.player,\n      index = _ref.index;\n  return React.createElement(Grid.Row, {\n    key: index,\n    columns: columns.length,\n    stretched: true\n  }, columns.map(function (column, columnIndex) {\n    var columnContent = columnIndex === 0 // if first column\n    ? player.username // get username\n    : player.stats[\"\".concat(column.accessor, \"_\").concat(mode)]; // else get stats\n\n    return React.createElement(Grid.Column, {\n      className: columnIndex == 0 ? '' : 'compact',\n      key: columnIndex,\n      textAlign: columnIndex == 0 ? 'left' : 'center',\n      verticalAlign: \"middle\",\n      mobile: column.size\n    }, React.createElement(Header, {\n      as: columnIndex == 0 ? 'h6' : 'h4',\n      style: {\n        color: 'white'\n      }\n    }, columnContent, columnIndex == 0 ? React.createElement(Header, {\n      as: \"h6\",\n      style: {\n        color: '#92a2bd'\n      }\n    }, player.stats[\"matchesplayed_\".concat(mode)], \" Matches\") : null));\n  }), React.createElement(Grid.Column, {\n    className: \"compact\",\n    textAlign: \"center\",\n    mobile: \"1\",\n    onClick: function onClick() {\n      console.log(\"delete me im index \".concat(player));\n    }\n  }, React.createElement(Icon, {\n    name: \"trash alternate outline\"\n  })));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/board/Player.js"],"names":["React","Grid","Header","Icon","Player","columns","mode","player","index","length","map","column","columnIndex","columnContent","username","stats","accessor","size","color","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,mBAAnC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAsC;AAAA,MAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjD,SACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,OAAO,EAAEH,OAAO,CAACI,MAAvC;AAA+C,IAAA,SAAS;AAAxD,KACKJ,OAAO,CAACK,GAAR,CAAY,UAACC,MAAD,EAASC,WAAT,EAAyB;AAClC,QAAMC,aAAa,GACfD,WAAW,KAAK,CAAhB,CAAkB;AAAlB,MACML,MAAM,CAACO,QADb,CACsB;AADtB,MAEMP,MAAM,CAACQ,KAAP,WAAgBJ,MAAM,CAACK,QAAvB,cAAmCV,IAAnC,EAHV,CADkC,CAIoB;;AACtD,WACI,oBAAC,IAAD,CAAM,MAAN;AACI,MAAA,SAAS,EAAEM,WAAW,IAAI,CAAf,GAAmB,EAAnB,GAAwB,SADvC;AAEI,MAAA,GAAG,EAAEA,WAFT;AAGI,MAAA,SAAS,EAAEA,WAAW,IAAI,CAAf,GAAmB,MAAnB,GAA4B,QAH3C;AAII,MAAA,aAAa,EAAC,QAJlB;AAKI,MAAA,MAAM,EAAED,MAAM,CAACM;AALnB,OAOI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAEL,WAAW,IAAI,CAAf,GAAmB,IAAnB,GAA0B,IAAtC;AAA4C,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT;AAAnD,OACKL,aADL,EAEKD,WAAW,IAAI,CAAf,GACG,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT;AAAvB,OACKX,MAAM,CAACQ,KAAP,yBAA8BT,IAA9B,EADL,aADH,GAIG,IANR,CAPJ,CADJ;AAkBH,GAvBA,CADL,EAyBI,oBAAC,IAAD,CAAM,MAAN;AACI,IAAA,SAAS,EAAC,SADd;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,MAAM,EAAC,GAHX;AAII,IAAA,OAAO,EAAE,mBAAM;AACXa,MAAAA,OAAO,CAACC,GAAR,8BAAkCb,MAAlC;AACH;AANL,KAQI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IARJ,CAzBJ,CADJ;AAsCH,CAvCD;;AAyCA,eAAeH,MAAf","sourcesContent":["import React from 'react';\nimport { Grid, Header, Icon } from 'semantic-ui-react';\n\nconst Player = ({ columns, mode, player, index }) => {\n    return (\n        <Grid.Row key={index} columns={columns.length} stretched>\n            {columns.map((column, columnIndex) => {\n                const columnContent =\n                    columnIndex === 0 // if first column\n                        ? player.username // get username\n                        : player.stats[`${column.accessor}_${mode}`]; // else get stats\n                return (\n                    <Grid.Column\n                        className={columnIndex == 0 ? '' : 'compact'}\n                        key={columnIndex}\n                        textAlign={columnIndex == 0 ? 'left' : 'center'}\n                        verticalAlign=\"middle\"\n                        mobile={column.size}\n                    >\n                        <Header as={columnIndex == 0 ? 'h6' : 'h4'} style={{ color: 'white' }}>\n                            {columnContent}\n                            {columnIndex == 0 ? (\n                                <Header as=\"h6\" style={{ color: '#92a2bd' }}>\n                                    {player.stats[`matchesplayed_${mode}`]} Matches\n                                </Header>\n                            ) : null}\n                        </Header>\n                    </Grid.Column>\n                );\n            })}\n            <Grid.Column\n                className=\"compact\"\n                textAlign=\"center\"\n                mobile=\"1\"\n                onClick={() => {\n                    console.log(`delete me im index ${player}`);\n                }}\n            >\n                <Icon name=\"trash alternate outline\" />\n            </Grid.Column>\n        </Grid.Row>\n    );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}