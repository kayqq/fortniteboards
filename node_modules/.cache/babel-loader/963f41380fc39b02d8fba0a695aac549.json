{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport NewsCard from \"./NewsCard\";\nimport { Card } from 'semantic-ui-react';\nimport { getNews } from \"../../actions\";\n\nvar index = function index(_ref) {\n  var itemsPerRow = _ref.itemsPerRow,\n      maxItems = _ref.maxItems;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      news = _useState2[0],\n      setNews = _useState2[1];\n\n  var fetch =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getNews();\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function fetch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var response = fetch().entries;\n    setNews(response.slice(0, maxItems));\n  }, []);\n  return React.createElement(Card.Group, {\n    stackable: true,\n    itemsPerRow: itemsPerRow\n  }, news.map(function (article) {\n    return React.createElement(NewsCard, {\n      key: article.title,\n      imagesrc: article.image,\n      title: article.title,\n      description: article.body,\n      date: article.time\n    });\n  }));\n};\n\nexport default index;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/news/index.js"],"names":["React","useState","useEffect","NewsCard","Card","getNews","index","itemsPerRow","maxItems","news","setNews","fetch","response","entries","slice","map","article","title","image","body","time"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA+B;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACjBP,QAAQ,CAAC,EAAD,CADS;AAAA;AAAA,MAClCQ,IADkC;AAAA,MAC5BC,OAD4B;;AAEzC,MAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGN,OAAO,EADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAALM,KAAK;AAAA;AAAA;AAAA,KAAX;;AAIAT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,QAAQ,GAAGD,KAAK,GAAGE,OAAzB;AACAH,IAAAA,OAAO,CAACE,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBN,QAAlB,CAAD,CAAP;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,WAAW,EAAED;AAAnC,KACKE,IAAI,CAACM,GAAL,CAAS,UAAAC,OAAO;AAAA,WACb,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACC,KADjB;AAEI,MAAA,QAAQ,EAAED,OAAO,CAACE,KAFtB;AAGI,MAAA,KAAK,EAAEF,OAAO,CAACC,KAHnB;AAII,MAAA,WAAW,EAAED,OAAO,CAACG,IAJzB;AAKI,MAAA,IAAI,EAAEH,OAAO,CAACI;AALlB,MADa;AAAA,GAAhB,CADL,CADJ;AAaH,CAxBD;;AA0BA,eAAed,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NewsCard from './NewsCard';\nimport { Card } from 'semantic-ui-react';\nimport { getNews } from '../../actions';\n\nconst index = ({ itemsPerRow, maxItems }) => {\n    const [news, setNews] = useState([]);\n    const fetch = async () => {\n        return await getNews();\n    };\n\n    useEffect(() => {\n        const response = fetch().entries;\n        setNews(response.slice(0, maxItems));\n    }, []);\n\n    return (\n        <Card.Group stackable itemsPerRow={itemsPerRow}>\n            {news.map(article => (\n                <NewsCard\n                    key={article.title}\n                    imagesrc={article.image}\n                    title={article.title}\n                    description={article.body}\n                    date={article.time}\n                />\n            ))}\n        </Card.Group>\n    );\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}