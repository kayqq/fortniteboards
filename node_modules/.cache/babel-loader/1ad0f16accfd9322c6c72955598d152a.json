{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ModeHeader from \"./ModeHeader\";\nimport StatsHeader from \"./StatsHeader\";\nimport Player from \"./Player\";\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          players = _this$props.players,\n          removePlayer = _this$props.removePlayer,\n          handleModeChange = _this$props.handleModeChange;\n      var mode = this.state.mode;\n      var columns = [{\n        header: 'Player',\n        accessor: 'username',\n        size: '5'\n      }, {\n        header: 'K/D',\n        accessor: 'kd',\n        size: '2'\n      }, {\n        header: 'Win %',\n        accessor: 'winrate',\n        size: '2'\n      }, {\n        header: 'Kills',\n        accessor: 'kills',\n        size: '2'\n      }, {\n        header: 'Wins',\n        accessor: 'placetop1',\n        size: '2' // { header: 'Matches', accessor: 'matchesplayed', size: '3' }\n\n      }];\n      return React.createElement(Grid, {\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        }\n      }, React.createElement(ModeHeader, {\n        mode: mode,\n        handleModeChange: handleModeChange\n      }), React.createElement(StatsHeader, {\n        columns: columns\n      }), players.map(function (player, index) {\n        return React.createElement(Player, {\n          columns: columns,\n          player: player,\n          key: index,\n          mode: mode,\n          boardIndex: index,\n          removePlayer: removePlayer\n        });\n      }));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport { Board as default };","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/board/index.js"],"names":["React","Component","Grid","ModeHeader","StatsHeader","Player","Board","props","players","removePlayer","handleModeChange","mode","state","columns","header","accessor","size","backgroundColor","color","map","player","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8EACTA,KADS;AAElB;;;;6BAEQ;AAAA,wBAC+C,KAAKA,KADpD;AAAA,UACGC,OADH,eACGA,OADH;AAAA,UACYC,YADZ,eACYA,YADZ;AAAA,UAC0BC,gBAD1B,eAC0BA,gBAD1B;AAAA,UAEGC,IAFH,GAEY,KAAKC,KAFjB,CAEGD,IAFH;AAGL,UAAME,OAAO,GAAG,CACZ;AAAEC,QAAAA,MAAM,EAAE,QAAV;AAAoBC,QAAAA,QAAQ,EAAE,UAA9B;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OADY,EAEZ;AAAEF,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,QAAQ,EAAE,IAA3B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAFY,EAGZ;AAAEF,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,QAAQ,EAAE,SAA7B;AAAwCC,QAAAA,IAAI,EAAE;AAA9C,OAHY,EAIZ;AAAEF,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,QAAQ,EAAE,OAA7B;AAAsCC,QAAAA,IAAI,EAAE;AAA5C,OAJY,EAKZ;AAAEF,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,QAAQ,EAAE,WAA5B;AAAyCC,QAAAA,IAAI,EAAE,GAA/C,CACA;;AADA,OALY,CAAhB;AAQA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,KAAK,EAAE;AAArC;AAAb,SAEI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEP,IAAlB;AAAwB,QAAA,gBAAgB,EAAED;AAA1C,QAFJ,EAKI,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEG;AAAtB,QALJ,EAQKL,OAAO,CAACW,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT;AAAA,eACT,oBAAC,MAAD;AACI,UAAA,OAAO,EAAER,OADb;AAEI,UAAA,MAAM,EAAEO,MAFZ;AAGI,UAAA,GAAG,EAAEC,KAHT;AAII,UAAA,IAAI,EAAEV,IAJV;AAKI,UAAA,UAAU,EAAEU,KALhB;AAMI,UAAA,YAAY,EAAEZ;AANlB,UADS;AAAA,OAAZ,CARL,CADJ;AAqBH;;;;EArC8BR,S;;SAAdK,K","sourcesContent":["import React, { Component } from 'react';\n\nimport { Grid } from 'semantic-ui-react';\nimport ModeHeader from './ModeHeader';\nimport StatsHeader from './StatsHeader';\nimport Player from './Player';\n\nexport default class Board extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { players, removePlayer, handleModeChange } = this.props;\n        const { mode } = this.state;\n        const columns = [\n            { header: 'Player', accessor: 'username', size: '5' },\n            { header: 'K/D', accessor: 'kd', size: '2' },\n            { header: 'Win %', accessor: 'winrate', size: '2' },\n            { header: 'Kills', accessor: 'kills', size: '2' },\n            { header: 'Wins', accessor: 'placetop1', size: '2' }\n            // { header: 'Matches', accessor: 'matchesplayed', size: '3' }\n        ];\n        return (\n            <Grid style={{ backgroundColor: '#2c3c57', color: 'white' }}>\n                {/* Render Mode Header / Selector */}\n                <ModeHeader mode={mode} handleModeChange={handleModeChange} />\n\n                {/* Render Column Header */}\n                <StatsHeader columns={columns} />\n\n                {/* Render Player stats */}\n                {players.map((player, index) => (\n                    <Player\n                        columns={columns}\n                        player={player}\n                        key={index}\n                        mode={mode}\n                        boardIndex={index}\n                        removePlayer={removePlayer}\n                    />\n                ))}\n            </Grid>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}