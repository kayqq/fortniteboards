{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Divider, Table, Responsive, Header } from 'semantic-ui-react';\nimport { getProfileByUsername } from \"../src/actions\";\nimport StatsTable from \"../src/components/Profile/StatsTable\";\nimport TotalStatsTable from \"../src/components/Profile/TotalStatsTable\";\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  _createClass(Profile, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, profile, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query;\n                _context.next = 3;\n                return getProfileByUsername(query.username);\n\n              case 3:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.t0 = {};\n\n              case 6:\n                profile = _context.t0;\n\n                if (profile.uid) {\n                  _context.next = 11;\n                  break;\n                }\n\n                err = new Error();\n                err.code = 'ENOENT';\n                throw err;\n\n              case 11:\n                return _context.abrupt(\"return\", {\n                  profile: profile\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Profile(props) {\n    _classCallCheck(this, Profile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var profile;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getProfileByUsername(this.props.profile.username);\n\n              case 2:\n                profile = _context2.sent;\n                console.log(profile);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var profile = this.props.profile;\n      var stats = profile.stats,\n          totals = profile.totals,\n          matches = profile.matches;\n      var season = profile.window.charAt(profile.window.length - 1);\n      return React.createElement(\"div\", null, React.createElement(Container, {\n        text: true,\n        style: {\n          paddingTop: '100px',\n          paddingBottom: '100px',\n          height: '100%'\n        }\n      }, React.createElement(TotalStatsTable, {\n        username: profile.username,\n        season: season,\n        kd: totals.kd,\n        kills: totals.kills,\n        wins: totals.wins,\n        winrate: totals.winrate,\n        matches: totals.matchesplayed\n      }), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_solo,\n        kills: stats.kills_solo,\n        wins: stats.placetop1_solo,\n        winrate: stats.winrate_solo,\n        matches: stats.matchesplayed_solo,\n        mode: \"SOLO\"\n      }), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_duo,\n        kills: stats.kills_duo,\n        wins: stats.placetop1_duo,\n        winrate: stats.winrate_duo,\n        matches: stats.matchesplayed_duo,\n        mode: \"DUO\"\n      }), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_squad,\n        kills: stats.kills_squad,\n        wins: stats.placetop1_squad,\n        winrate: stats.winrate_squad,\n        matches: stats.matchesplayed_squad,\n        mode: \"SQUAD\"\n      }), React.createElement(Table, {\n        sortable: true,\n        unstackable: true,\n        compact: true,\n        size: \"small\",\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        }\n      }, React.createElement(Table.Header, null, React.createElement(Table.Row, null, React.createElement(Table.HeaderCell, {\n        textAlign: \"center\",\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        } // sorted={column === 'kd' ? direction : null}\n\n      }, React.createElement(Header, {\n        size: \"tiny\"\n      }, \"15.86\", React.createElement(Header.Subheader, {\n        as: \"h6\",\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"K/D\"))), React.createElement(Table.HeaderCell, {\n        textAlign: \"center\",\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        } // sorted={column === 'winrate' ? direction : null}\n\n      }, React.createElement(Header, {\n        size: \"tiny\"\n      }, \"58.82\", React.createElement(Header.Subheader, {\n        as: \"h6\",\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"Win %\"))), React.createElement(Table.HeaderCell, {\n        textAlign: \"center\",\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        } // sorted={column === 'kills' ? direction : null}\n\n      }, React.createElement(Header, {\n        size: \"tiny\"\n      }, React.createElement(Header.Subheader, {\n        as: \"h6\",\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"Kills\"))), React.createElement(Table.HeaderCell, {\n        textAlign: \"center\",\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        } // sorted={column === 'wins' ? direction : null}\n\n      }, React.createElement(Header, {\n        size: \"tiny\"\n      }, React.createElement(Header.Subheader, {\n        as: \"h6\",\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"Wins\"))), React.createElement(Table.HeaderCell, {\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        } // sorted={column === 'username' ? direction : null}\n\n      }, React.createElement(Header, {\n        size: \"tiny\"\n      }, \"4000\", React.createElement(Header.Subheader, {\n        as: \"h6\",\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"Matches\"))))), React.createElement(Table.Body, null, matches.map(function (match, index) {\n        return React.createElement(Table.Row, {\n          key: match.username,\n          verticalAlign: \"top\"\n        });\n      })))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/pages/profile.js"],"names":["React","Component","Container","Divider","Table","Responsive","Header","getProfileByUsername","StatsTable","TotalStatsTable","Profile","query","username","profile","uid","err","Error","code","props","console","log","stats","totals","matches","season","window","charAt","length","paddingTop","paddingBottom","height","kd","kills","wins","winrate","matchesplayed","kd_solo","kills_solo","placetop1_solo","winrate_solo","matchesplayed_solo","kd_duo","kills_duo","placetop1_duo","winrate_duo","matchesplayed_duo","kd_squad","kills_squad","placetop1_squad","winrate_squad","matchesplayed_squad","backgroundColor","color","map","match","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Divider, Table, Responsive, Header } from 'semantic-ui-react';\n\nimport { getProfileByUsername } from '../src/actions';\n\nimport StatsTable from '../src/components/Profile/StatsTable';\nimport TotalStatsTable from '../src/components/Profile/TotalStatsTable';\n\nclass Profile extends Component {\n    static async getInitialProps({ query }) {\n        const profile = (await getProfileByUsername(query.username)) || {};\n        if (!profile.uid) {\n            const err = new Error();\n            err.code = 'ENOENT';\n            throw err;\n        }\n        return { profile };\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        const profile = await getProfileByUsername(this.props.profile.username);\n        console.log(profile);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { stats, totals, matches } = profile;\n        const season = profile.window.charAt(profile.window.length - 1);\n\n        return (\n            <div>\n                <Container\n                    text\n                    style={{\n                        paddingTop: '100px',\n                        paddingBottom: '100px',\n                        height: '100%'\n                    }}\n                >\n                    <TotalStatsTable\n                        username={profile.username}\n                        season={season}\n                        kd={totals.kd}\n                        kills={totals.kills}\n                        wins={totals.wins}\n                        winrate={totals.winrate}\n                        matches={totals.matchesplayed}\n                    />\n                    <Divider hidden />\n                    <StatsTable\n                        kd={stats.kd_solo}\n                        kills={stats.kills_solo}\n                        wins={stats.placetop1_solo}\n                        winrate={stats.winrate_solo}\n                        matches={stats.matchesplayed_solo}\n                        mode=\"SOLO\"\n                    />\n\n                    <Divider hidden />\n\n                    <StatsTable\n                        kd={stats.kd_duo}\n                        kills={stats.kills_duo}\n                        wins={stats.placetop1_duo}\n                        winrate={stats.winrate_duo}\n                        matches={stats.matchesplayed_duo}\n                        mode=\"DUO\"\n                    />\n\n                    <Divider hidden />\n\n                    <StatsTable\n                        kd={stats.kd_squad}\n                        kills={stats.kills_squad}\n                        wins={stats.placetop1_squad}\n                        winrate={stats.winrate_squad}\n                        matches={stats.matchesplayed_squad}\n                        mode=\"SQUAD\"\n                    />\n                    <Table\n                        sortable\n                        unstackable\n                        compact\n                        size=\"small\"\n                        style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                    >\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell\n                                    textAlign=\"center\"\n                                    style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                                    // sorted={column === 'kd' ? direction : null}\n                                >\n                                    <Header size=\"tiny\">\n                                        15.86\n                                        <Header.Subheader\n                                            as=\"h6\"\n                                            style={{\n                                                color: '#92a2bd'\n                                            }}\n                                        >\n                                            K/D\n                                        </Header.Subheader>\n                                    </Header>\n                                </Table.HeaderCell>\n                                <Table.HeaderCell\n                                    textAlign=\"center\"\n                                    style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                                    // sorted={column === 'winrate' ? direction : null}\n                                >\n                                    <Header size=\"tiny\">\n                                        58.82\n                                        <Header.Subheader\n                                            as=\"h6\"\n                                            style={{\n                                                color: '#92a2bd'\n                                            }}\n                                        >\n                                            Win %\n                                        </Header.Subheader>\n                                    </Header>\n                                </Table.HeaderCell>\n                                <Table.HeaderCell\n                                    textAlign=\"center\"\n                                    style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                                    // sorted={column === 'kills' ? direction : null}\n                                >\n                                    <Header size=\"tiny\">\n                                        <Header.Subheader\n                                            as=\"h6\"\n                                            style={{\n                                                color: '#92a2bd'\n                                            }}\n                                        >\n                                            Kills\n                                        </Header.Subheader>\n                                    </Header>\n                                </Table.HeaderCell>\n                                <Table.HeaderCell\n                                    textAlign=\"center\"\n                                    style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                                    // sorted={column === 'wins' ? direction : null}\n                                >\n                                    <Header size=\"tiny\">\n                                        <Header.Subheader\n                                            as=\"h6\"\n                                            style={{\n                                                color: '#92a2bd'\n                                            }}\n                                        >\n                                            Wins\n                                        </Header.Subheader>\n                                    </Header>\n                                </Table.HeaderCell>\n                                <Table.HeaderCell\n                                    style={{ backgroundColor: '#2c3c57', color: 'white' }}\n                                    // sorted={column === 'username' ? direction : null}\n                                >\n                                    <Header size=\"tiny\">\n                                        4000\n                                        <Header.Subheader\n                                            as=\"h6\"\n                                            style={{\n                                                color: '#92a2bd'\n                                            }}\n                                        >\n                                            Matches\n                                        </Header.Subheader>\n                                    </Header>\n                                </Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {matches.map((match, index) => (\n                                <Table.Row key={match.username} verticalAlign=\"top\">\n                                    {/* <Table.Cell singleLine>\n                                        <Header as=\"h6\" style={{ color: 'white' }}>\n                                            {match.username}\n\n                                            <Header.Subheader\n                                                size=\"small\"\n                                                style={{ color: '#92a2bd' }}\n                                            >\n                                                {match.stats[`matchesplayed_${mode}`]} Matches\n                                            </Header.Subheader>\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell singleLine textAlign=\"center\">\n                                        <Header as=\"h4\" style={{ color: 'white' }}>\n                                            {player.stats[`kd_${mode}`]}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell singleLine textAlign=\"center\">\n                                        <Header as=\"h4\" style={{ color: 'white' }}>\n                                            {player.stats[`winrate_${mode}`]}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell singleLine textAlign=\"center\">\n                                        <Header as=\"h4\" style={{ color: 'white' }}>\n                                            {player.stats[`kills_${mode}`]}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell collapsing singleLine textAlign=\"center\">\n                                        <Header as=\"h4\" style={{ color: 'white' }}>\n                                            {player.stats[`placetop1_${mode}`]}\n                                        </Header>\n                                    </Table.Cell>\n                                    <Table.Cell\n                                        singleLine\n                                        textAlign=\"center\"\n                                        icon=\"trash alternate outline\"\n                                        style={{\n                                            color: 'red',\n                                            fontSize: '12px',\n                                            paddingLeft: '0px'\n                                        }}\n                                    /> */}\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}