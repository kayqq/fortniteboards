{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar axiosInstance = axios.create({\n  baseURL: \"https://fortnite-public-api.theapinetwork.com/prod09\",\n  timeout: 3000\n});\nexport var getUsernames =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(username) {\n    var endPoint, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            endPoint = \"/users/search\";\n            _context.next = 3;\n            return axiosInstance.get(endPoint, {\n              params: {\n                username: username\n              }\n            });\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data.entries);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getUsernames(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getProfileByUsername =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(username) {\n    var platform,\n        window,\n        response,\n        uid,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            platform = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 'pc';\n            window = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 'season7';\n            _context2.next = 4;\n            return axiosInstance.get('/users/id', {\n              params: {\n                username: username\n              }\n            });\n\n          case 4:\n            response = _context2.sent;\n            uid = response.data.uid;\n            _context2.next = 8;\n            return axiosInstance.get(\"/users/public/br_stats\", {\n              params: {\n                user_id: uid,\n                platform: platform,\n                window: window\n              }\n            });\n\n          case 8:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function getProfileByUsername(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getProfileByUid =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(uid) {\n    var platform,\n        window,\n        response,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            platform = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 'pc';\n            window = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 'season7';\n            _context3.next = 4;\n            return axiosInstance.get(\"/users/public/br_stats\", {\n              params: {\n                user_id: uid,\n                platform: platform,\n                window: window\n              }\n            });\n\n          case 4:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function getProfileByUid(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getNews =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    var language,\n        response,\n        _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            language = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : 'en';\n            _context4.next = 3;\n            return axiosInstance.get('/br_motd/get', {\n              params: {\n                language: language\n              }\n            });\n\n          case 3:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function getNews() {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/actions/index.js"],"names":["axios","axiosInstance","create","baseURL","timeout","getUsernames","username","endPoint","get","params","response","data","entries","getProfileByUsername","platform","window","uid","user_id","getProfileByUid","getNews","language"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC/BC,EAAAA,OAAO,wDADwB;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAAb,CAAtB;AAKA,OAAO,IAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,QADkB;AAAA;AAAA,mBAEDN,aAAa,CAACO,GAAd,CAAkBD,QAAlB,EAA4B;AAAEE,cAAAA,MAAM,EAAE;AAAEH,gBAAAA,QAAQ,EAAEA;AAAZ;AAAV,aAA5B,CAFC;;AAAA;AAElBI,YAAAA,QAFkB;AAAA,6CAGjBA,QAAQ,CAACC,IAAT,CAAcC,OAHG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZP,YAAY;AAAA;AAAA;AAAA,GAAlB;AAMP,OAAO,IAAMQ,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOP,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBQ,YAAAA,QAAjB,8DAA4B,IAA5B;AAAkCC,YAAAA,MAAlC,8DAA2C,SAA3C;AAAA;AAAA,mBACXd,aAAa,CAACO,GAAd,CAAkB,WAAlB,EAA+B;AAAEC,cAAAA,MAAM,EAAE;AAAEH,gBAAAA,QAAQ,EAAEA;AAAZ;AAAV,aAA/B,CADW;;AAAA;AAC5BI,YAAAA,QAD4B;AAGxBM,YAAAA,GAHwB,GAGhBN,QAAQ,CAACC,IAHO,CAGxBK,GAHwB;AAAA;AAAA,mBAKff,aAAa,CAACO,GAAd,2BAA4C;AACzDC,cAAAA,MAAM,EAAE;AACJQ,gBAAAA,OAAO,EAAED,GADL;AAEJF,gBAAAA,QAAQ,EAAEA,QAFN;AAGJC,gBAAAA,MAAM,EAAEA;AAHJ;AADiD,aAA5C,CALe;;AAAA;AAKhCL,YAAAA,QALgC;AAAA,8CAYzBA,QAAQ,CAACC,IAZgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBE,oBAAoB;AAAA;AAAA;AAAA,GAA1B;AAeP,OAAO,IAAMK,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOF,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYF,YAAAA,QAAZ,8DAAuB,IAAvB;AAA6BC,YAAAA,MAA7B,8DAAsC,SAAtC;AAAA;AAAA,mBACJd,aAAa,CAACO,GAAd,2BAA4C;AAC/DC,cAAAA,MAAM,EAAE;AACJQ,gBAAAA,OAAO,EAAED,GADL;AAEJF,gBAAAA,QAAQ,EAAEA,QAFN;AAGJC,gBAAAA,MAAM,EAAEA;AAHJ;AADuD,aAA5C,CADI;;AAAA;AACrBL,YAAAA,QADqB;AAAA,8CAQpBA,QAAQ,CAACC,IARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfO,eAAe;AAAA;AAAA;AAAA,GAArB;AAWP,OAAO,IAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,YAAAA,QAAP,8DAAkB,IAAlB;AAAA;AAAA,mBACEnB,aAAa,CAACO,GAAd,CAAkB,cAAlB,EAAkC;AACnDC,cAAAA,MAAM,EAAE;AAAEW,gBAAAA,QAAQ,EAAEA;AAAZ;AAD2C,aAAlC,CADF;;AAAA;AACfV,YAAAA,QADe;AAAA,8CAKZA,QAAQ,CAACC,IALG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPQ,OAAO;AAAA;AAAA;AAAA,GAAb","sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: `https://fortnite-public-api.theapinetwork.com/prod09`,\n    timeout: 3000\n});\n\nexport const getUsernames = async username => {\n    const endPoint = `/users/search`;\n    const response = await axiosInstance.get(endPoint, { params: { username: username } });\n    return response.data.entries;\n};\n\nexport const getProfileByUsername = async (username, platform = 'pc', window = 'season7') => {\n    let response = await axiosInstance.get('/users/id', { params: { username: username } });\n\n    const { uid } = response.data;\n\n    response = await axiosInstance.get(`/users/public/br_stats`, {\n        params: {\n            user_id: uid,\n            platform: platform,\n            window: window\n        }\n    });\n    return response.data;\n};\n\nexport const getProfileByUid = async (uid, platform = 'pc', window = 'season7') => {\n    const response = await axiosInstance.get(`/users/public/br_stats`, {\n        params: {\n            user_id: uid,\n            platform: platform,\n            window: window\n        }\n    });\n    return response.data;\n};\n\nexport const getNews = async (language = 'en') => {\n    let response = await axiosInstance.get('/br_motd/get', {\n        params: { language: language }\n    });\n\n    return response.data;\n};\n"]},"metadata":{},"sourceType":"module"}