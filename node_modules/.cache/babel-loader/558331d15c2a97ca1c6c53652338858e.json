{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Container, Grid, Segment } from 'semantic-ui-react';\nimport SearchBar from \"../src/components/SearchBar\";\nimport { fetchByUsername, getNews } from \"../src/actions\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleResultSelect\", function (username) {\n      _this.props.router.push(\"/profile/\".concat(username));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"prefetchRoute\", function (username) {\n      _this.props.router.prefetch(\"/profile/\".concat(username));\n    });\n\n    _this.state = {\n      News: {}\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = console;\n                _context.next = 3;\n                return getNews().entries;\n\n              case 3:\n                _context.t1 = _context.sent;\n\n                _context.t0.log.call(_context.t0, _context.t1);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          searchResults = _this$props.searchResults,\n          fetchByUsername = _this$props.fetchByUsername; // debounced fetch\n\n      var debouncedfetchByUsername = _.debounce(fetchByUsername, 500, {\n        maxWait: 1000\n      });\n\n      return React.createElement(Container, {\n        text: true,\n        textAlign: \"center\",\n        style: {\n          paddingTop: '100px',\n          paddingBottom: '100px',\n          height: '100%'\n        }\n      }, React.createElement(\"h1\", null, \"Fortnite Boards\"), React.createElement(Grid, {\n        columns: \"1\",\n        centered: true,\n        textAlign: \"center\"\n      }, React.createElement(Grid.Column, {\n        mobile: \"16\",\n        computer: \"6\",\n        largeScreen: \"6\",\n        tablet: \"6\",\n        widescreen: \"6\"\n      }, React.createElement(Container, null, React.createElement(SearchBar, {\n        handleResultSelect: this.handleResultSelect,\n        prefetchRoute: this.prefetchRoute,\n        fetchByUsername: debouncedfetchByUsername,\n        results: searchResults\n      }))), React.createElement(Grid.Column, {\n        textAlign: \"center\"\n      }, React.createElement(Segment, {\n        padded: true,\n        style: {\n          backgroundColor: 'white',\n          height: '200px'\n        }\n      }, React.createElement(\"h2\", null, \"NEWS\"), React.createElement(\"h2\", null, \"NEWS\"), React.createElement(\"h2\", null, \"NEWS\")))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchResults: state.search.searchResults\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchByUsername: fetchByUsername\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/pages/index.js"],"names":["React","Component","bindActionCreators","connect","_","Container","Grid","Segment","SearchBar","fetchByUsername","getNews","Index","props","username","router","push","prefetch","state","News","console","entries","log","searchResults","debouncedfetchByUsername","debounce","maxWait","paddingTop","paddingBottom","height","handleResultSelect","prefetchRoute","backgroundColor","mapStateToProps","search","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Container, Grid, Segment } from 'semantic-ui-react';\r\nimport SearchBar from '../src/components/SearchBar';\r\n\r\nimport { fetchByUsername, getNews } from '../src/actions';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            News: {}\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        console.log(await getNews().entries);\r\n    }\r\n\r\n    handleResultSelect = username => {\r\n        this.props.router.push(`/profile/${username}`);\r\n    };\r\n\r\n    prefetchRoute = username => {\r\n        this.props.router.prefetch(`/profile/${username}`);\r\n    };\r\n\r\n    render() {\r\n        const { searchResults, fetchByUsername } = this.props;\r\n\r\n        // debounced fetch\r\n        const debouncedfetchByUsername = _.debounce(fetchByUsername, 500, {\r\n            maxWait: 1000\r\n        });\r\n\r\n        return (\r\n            <Container\r\n                text\r\n                textAlign=\"center\"\r\n                style={{\r\n                    paddingTop: '100px',\r\n                    paddingBottom: '100px',\r\n                    height: '100%'\r\n                }}\r\n            >\r\n                <h1>Fortnite Boards</h1>\r\n                <Grid columns=\"1\" centered textAlign=\"center\">\r\n                    <Grid.Column mobile=\"16\" computer=\"6\" largeScreen=\"6\" tablet=\"6\" widescreen=\"6\">\r\n                        <Container>\r\n                            <SearchBar\r\n                                handleResultSelect={this.handleResultSelect}\r\n                                prefetchRoute={this.prefetchRoute}\r\n                                fetchByUsername={debouncedfetchByUsername}\r\n                                results={searchResults}\r\n                            />\r\n                        </Container>\r\n                    </Grid.Column>\r\n                    <Grid.Column textAlign=\"center\">\r\n                        <Segment\r\n                            padded\r\n                            style={{\r\n                                backgroundColor: 'white',\r\n                                height: '200px'\r\n                            }}\r\n                        >\r\n                            <h2>NEWS</h2>\r\n                            <h2>NEWS</h2>\r\n                            <h2>NEWS</h2>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchResults: state.search.searchResults\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ fetchByUsername }, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Index);\r\n"]},"metadata":{},"sourceType":"module"}