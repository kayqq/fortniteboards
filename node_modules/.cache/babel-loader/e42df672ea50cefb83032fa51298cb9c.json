{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport NewsCard from \"./NewsCard\";\nimport { Card } from 'semantic-ui-react';\nimport { getNews } from \"../../actions\";\n\nvar index = function index(_ref) {\n  var itemsPerRow = _ref.itemsPerRow,\n      maxItems = _ref.maxItems;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      news = _useState2[0],\n      setNews = _useState2[1];\n\n  function fetch() {\n    return _fetch.apply(this, arguments);\n  }\n\n  function _fetch() {\n    _fetch = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getNews();\n\n            case 2:\n              response = _context.sent;\n              console.log(response);\n              setNews(response); // const newsEntries = response.entries;\n              // setNews(newsEntries);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _fetch.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    console.log('called');\n    fetch(); // console.log(news);\n  }, []);\n  return React.createElement(Card.Group, {\n    stackable: true,\n    itemsPerRow: itemsPerRow\n  });\n};\n\nexport default index;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/news/index.js"],"names":["React","useState","useEffect","NewsCard","Card","getNews","index","itemsPerRow","maxItems","news","setNews","fetch","response","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA+B;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACjBP,QAAQ,CAAC,EAAD,CADS;AAAA;AAAA,MAClCQ,IADkC;AAAA,MAC5BC,OAD4B;;AAAA,WAE1BC,KAF0B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAEzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiCN,OAAO,EADxC;;AAAA;AACUO,cAAAA,QADV;AAEIC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAF,cAAAA,OAAO,CAACE,QAAD,CAAP,CAHJ,CAII;AACA;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFyC;AAAA;AAAA;;AAUzCV,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAH,IAAAA,KAAK,GAFO,CAGZ;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,MAArB;AAAsB,IAAA,WAAW,EAAEJ;AAAnC,IADJ;AAaH,CA7BD;;AA+BA,eAAeD,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NewsCard from './NewsCard';\nimport { Card } from 'semantic-ui-react';\nimport { getNews } from '../../actions';\n\nconst index = ({ itemsPerRow, maxItems }) => {\n    const [news, setNews] = useState([]);\n    async function fetch() {\n        const response = await await getNews();\n        console.log(response);\n        setNews(response);\n        // const newsEntries = response.entries;\n        // setNews(newsEntries);\n    }\n\n    useEffect(() => {\n        console.log('called');\n        fetch();\n        // console.log(news);\n    }, []);\n\n    return (\n        <Card.Group stackable itemsPerRow={itemsPerRow}>\n            {/* {news.map(article => (\n                <NewsCard\n                    key={article.title}\n                    imagesrc={article.image}\n                    title={article.title}\n                    description={article.body}\n                    date={article.time}\n                />\n            ))} */}\n        </Card.Group>\n    );\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}