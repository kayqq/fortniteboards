{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nexport var useDebounce = function useDebounce(value, delay) {\n  // State and setters for debounced value\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      debouncedValue = _useState2[0],\n      setDebouncedValue = _useState2[1];\n\n  useEffect(function () {\n    // Update debounced value after delay\n    var handler = setTimeout(function () {\n      setDebouncedValue(value);\n    }, delay);\n    return function () {\n      clearTimeout(handler);\n    };\n  }, [value] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n};","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/hooks/useDebounce.js"],"names":["React","useState","useEffect","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACzC;AADyC,kBAEGJ,QAAQ,CAACG,KAAD,CAFX;AAAA;AAAA,MAElCE,cAFkC;AAAA,MAElBC,iBAFkB;;AAIzCL,EAAAA,SAAS,CACL,YAAM;AACF;AACA,QAAMM,OAAO,GAAGC,UAAU,CAAC,YAAM;AAC7BF,MAAAA,iBAAiB,CAACH,KAAD,CAAjB;AACH,KAFyB,EAEvBC,KAFuB,CAA1B;AAGA,WAAO,YAAM;AACTK,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACH,KAFD;AAGH,GATI,EAUL,CAACJ,KAAD,CAVK,CAUG;AAVH,GAAT;AAaA,SAAOE,cAAP;AACH,CAlBM","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            // Update debounced value after delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [value] // Only re-call effect if value or delay changes\n    );\n\n    return debouncedValue;\n};\n"]},"metadata":{},"sourceType":"module"}