{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Container, Grid, Card, Segment } from 'semantic-ui-react';\nimport SearchBar from \"../src/components/SearchBar\";\nimport NewsCard from \"../src/components/NewsCard\";\nimport { getNews, getUsernames } from \"../src/actions\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleResultSelect\", function (username) {\n      _this.props.router.push(\"/profile/\".concat(username));\n    });\n\n    _this.state = {\n      news: []\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getNews();\n\n              case 2:\n                data = _context.sent;\n                this.setState({\n                  news: data.entries.slice(0, 3)\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        textAlign: \"center\",\n        style: {\n          paddingTop: '100px',\n          paddingBottom: '100px',\n          height: '100%'\n        }\n      }, React.createElement(Grid, {\n        centered: true,\n        textAlign: \"center\"\n      }, React.createElement(Grid.Row, {\n        as: Segment\n      }, React.createElement(\"h3\", null, \"Fortnite Boards\"), React.createElement(Container, null, React.createElement(\"h4\", null, \"Welcome to Fortnite Boards! Search player stats by battle tag or build your own Leaderboard and share to your friends!\")), React.createElement(Grid.Column, {\n        mobile: \"16\",\n        computer: \"6\",\n        largeScreen: \"6\",\n        tablet: \"6\",\n        widescreen: \"6\",\n        style: {\n          paddingBottom: '1em',\n          paddingTop: '1em'\n        }\n      }, React.createElement(SearchBar, {\n        handleResultSelect: this.handleResultSelect,\n        prefetchRoute: this.prefetchRoute\n      }))), React.createElement(Grid.Row, {\n        as: Segment\n      }, React.createElement(\"h3\", null, \"News\")), React.createElement(Grid.Row, null, React.createElement(Grid.Column, null, React.createElement(Card.Group, {\n        stackable: true,\n        itemsPerRow: 3\n      }, this.state.news.map(function (article) {\n        return React.createElement(NewsCard, {\n          key: article.title,\n          imagesrc: article.image,\n          title: article.title,\n          description: article.body,\n          date: article.time\n        });\n      }))))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/pages/index.js"],"names":["React","Component","_","Container","Grid","Card","Segment","SearchBar","NewsCard","getNews","getUsernames","Index","props","username","router","push","state","news","data","setState","entries","slice","paddingTop","paddingBottom","height","handleResultSelect","prefetchRoute","map","article","title","image","body","time"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,OAAhC,QAA+C,mBAA/C;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AAEA,SAASC,OAAT,EAAkBC,YAAlB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,iGAYE,UAAAC,QAAQ,EAAI;AAC7B,YAAKD,KAAL,CAAWE,MAAX,CAAkBC,IAAlB,oBAAmCF,QAAnC;AACH,KAdkB;;AAGf,UAAKG,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAHe;AAMlB;;;;;;;;;;;;;;uBAEsBR,OAAO,E;;;AAApBS,gBAAAA,I;AACN,qBAAKC,QAAL,CAAc;AAAEF,kBAAAA,IAAI,EAAEC,IAAI,CAACE,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB;AAAR,iBAAd;;;;;;;;;;;;;;;;;;6BAOK;AACL,aACI,oBAAC,SAAD;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,KAAK,EAAE;AACHC,UAAAA,UAAU,EAAE,OADT;AAEHC,UAAAA,aAAa,EAAE,OAFZ;AAGHC,UAAAA,MAAM,EAAE;AAHL;AAFX,SAQI,oBAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAe,QAAA,SAAS,EAAC;AAAzB,SACI,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,EAAE,EAAElB;AAAd,SACI,kDADJ,EAEI,oBAAC,SAAD,QACI,yJADJ,CAFJ,EASI,oBAAC,IAAD,CAAM,MAAN;AACI,QAAA,MAAM,EAAC,IADX;AAEI,QAAA,QAAQ,EAAC,GAFb;AAGI,QAAA,WAAW,EAAC,GAHhB;AAII,QAAA,MAAM,EAAC,GAJX;AAKI,QAAA,UAAU,EAAC,GALf;AAMI,QAAA,KAAK,EAAE;AAAEiB,UAAAA,aAAa,EAAE,KAAjB;AAAwBD,UAAAA,UAAU,EAAE;AAApC;AANX,SAQI,oBAAC,SAAD;AACI,QAAA,kBAAkB,EAAE,KAAKG,kBAD7B;AAEI,QAAA,aAAa,EAAE,KAAKC;AAFxB,QARJ,CATJ,CADJ,EAyBI,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,EAAE,EAAEpB;AAAd,SACI,uCADJ,CAzBJ,EA4BI,oBAAC,IAAD,CAAM,GAAN,QACI,oBAAC,IAAD,CAAM,MAAN,QACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,MAArB;AAAsB,QAAA,WAAW,EAAE;AAAnC,SACK,KAAKU,KAAL,CAAWC,IAAX,CAAgBU,GAAhB,CAAoB,UAAAC,OAAO;AAAA,eACxB,oBAAC,QAAD;AACI,UAAA,GAAG,EAAEA,OAAO,CAACC,KADjB;AAEI,UAAA,QAAQ,EAAED,OAAO,CAACE,KAFtB;AAGI,UAAA,KAAK,EAAEF,OAAO,CAACC,KAHnB;AAII,UAAA,WAAW,EAAED,OAAO,CAACG,IAJzB;AAKI,UAAA,IAAI,EAAEH,OAAO,CAACI;AALlB,UADwB;AAAA,OAA3B,CADL,CADJ,CADJ,CA5BJ,CARJ,CADJ;AAuDH;;;;EAzEe/B,S;;AA4EpB,eAAeU,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport { Container, Grid, Card, Segment } from 'semantic-ui-react';\r\nimport SearchBar from '../src/components/SearchBar';\r\nimport NewsCard from '../src/components/NewsCard';\r\n\r\nimport { getNews, getUsernames } from '../src/actions';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            news: []\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        const data = await getNews();\r\n        this.setState({ news: data.entries.slice(0, 3) });\r\n    }\r\n\r\n    handleResultSelect = username => {\r\n        this.props.router.push(`/profile/${username}`);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container\r\n                textAlign=\"center\"\r\n                style={{\r\n                    paddingTop: '100px',\r\n                    paddingBottom: '100px',\r\n                    height: '100%'\r\n                }}\r\n            >\r\n                <Grid centered textAlign=\"center\">\r\n                    <Grid.Row as={Segment}>\r\n                        <h3>Fortnite Boards</h3>\r\n                        <Container>\r\n                            <h4>\r\n                                Welcome to Fortnite Boards! Search player stats by battle tag or\r\n                                build your own Leaderboard and share to your friends!\r\n                            </h4>\r\n                        </Container>\r\n\r\n                        <Grid.Column\r\n                            mobile=\"16\"\r\n                            computer=\"6\"\r\n                            largeScreen=\"6\"\r\n                            tablet=\"6\"\r\n                            widescreen=\"6\"\r\n                            style={{ paddingBottom: '1em', paddingTop: '1em' }}\r\n                        >\r\n                            <SearchBar\r\n                                handleResultSelect={this.handleResultSelect}\r\n                                prefetchRoute={this.prefetchRoute}\r\n                            />\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n\r\n                    <Grid.Row as={Segment}>\r\n                        <h3>News</h3>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Card.Group stackable itemsPerRow={3}>\r\n                                {this.state.news.map(article => (\r\n                                    <NewsCard\r\n                                        key={article.title}\r\n                                        imagesrc={article.image}\r\n                                        title={article.title}\r\n                                        description={article.body}\r\n                                        date={article.time}\r\n                                    />\r\n                                ))}\r\n                            </Card.Group>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}