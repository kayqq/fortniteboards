{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { FETCH_BY_PLAYERNAME_SUCCESS } from \"../actions/constants\";\nvar initialState = {\n  running: false,\n  searchResults: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_BY_PLAYERNAME_SUCCESS:\n      // The following is a work around for Semantic Search key and title prop bug\n      var searchResults = action.payload.map(function (result, index) {\n        result.key = index;\n        result.title = result.username;\n        return result;\n      });\n      return _objectSpread({}, state, {\n        searchResults: searchResults\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/kenny/Desktop/test nextjs 8/src/reducers/search.js"],"names":["FETCH_BY_PLAYERNAME_SUCCESS","initialState","running","searchResults","state","action","type","payload","map","result","index","key","title","username"],"mappings":";AAAA,SAASA,2BAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;AAKA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,2BAAL;AACE;AACA,UAAMG,aAAa,GAAGE,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAmB,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC1DD,QAAAA,MAAM,CAACE,GAAP,GAAaD,KAAb;AACAD,QAAAA,MAAM,CAACG,KAAP,GAAeH,MAAM,CAACI,QAAtB;AACA,eAAOJ,MAAP;AACD,OAJqB,CAAtB;AAKA,+BAAYL,KAAZ;AAAmBD,QAAAA,aAAa,EAAEA;AAAlC;;AACF;AACE,aAAOC,KAAP;AAVJ;AAYD,CAbD","sourcesContent":["import { FETCH_BY_PLAYERNAME_SUCCESS } from \"../actions/constants\";\n\nconst initialState = {\n  running: false,\n  searchResults: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_BY_PLAYERNAME_SUCCESS:\n      // The following is a work around for Semantic Search key and title prop bug\n      const searchResults = action.payload.map((result, index) => {\n        result.key = index;\n        result.title = result.username;\n        return result;\n      });\n      return { ...state, searchResults: searchResults };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}