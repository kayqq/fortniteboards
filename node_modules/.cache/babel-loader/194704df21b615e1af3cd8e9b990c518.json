{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { Grid, Rail, Sticky } from 'semantic-ui-react';\nimport ModeHeader from \"./ModeHeader\";\nimport StatsHeader from \"./StatsHeader\";\nimport Player from \"./Player\";\n\nvar index = function index(_ref) {\n  var columns = _ref.columns,\n      players = _ref.players,\n      removePlayer = _ref.removePlayer,\n      handleModeChange = _ref.handleModeChange,\n      mode = _ref.mode;\n  return React.createElement(Grid, {\n    style: {\n      backgroundColor: '#2c3c57',\n      color: 'white'\n    }\n  }, React.createElement(ModeHeader, {\n    mode: mode,\n    handleModeChange: handleModeChange\n  }), React.createElement(StatsHeader, {\n    columns: columns\n  }), players.map(function (player, index) {\n    return React.createElement(Player, {\n      key: index,\n      columns: columns,\n      player: player,\n      mode: mode,\n      boardIndex: index,\n      removePlayer: removePlayer\n    });\n  }));\n};\n\nexport default index;\n\nvar board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(board, _React$Component);\n\n  function board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleContextRef\", function (contextRef) {\n      return _this.setState({\n        contextRef: contextRef\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(board, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        }\n      }, React.createElement(Sticky, {\n        context: contextRef,\n        pushing: true\n      }, React.createElement(ModeHeader, {\n        mode: mode,\n        handleModeChange: handleModeChange\n      })), React.createElement(StatsHeader, {\n        columns: columns\n      }), players.map(function (player, index) {\n        return React.createElement(Player, {\n          key: index,\n          columns: columns,\n          player: player,\n          mode: mode,\n          boardIndex: index,\n          removePlayer: removePlayer\n        });\n      }));\n    }\n  }]);\n\n  return board;\n}(React.Component);","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/board/index.js"],"names":["React","Grid","Rail","Sticky","ModeHeader","StatsHeader","Player","index","columns","players","removePlayer","handleModeChange","mode","backgroundColor","color","map","player","board","contextRef","setState","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAgE;AAAA,MAA7DC,OAA6D,QAA7DA,OAA6D;AAAA,MAApDC,OAAoD,QAApDA,OAAoD;AAAA,MAA3CC,YAA2C,QAA3CA,YAA2C;AAAA,MAA7BC,gBAA6B,QAA7BA,gBAA6B;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC1E,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE;AAArC;AAAb,KACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,IAAlB;AAAwB,IAAA,gBAAgB,EAAED;AAA1C,IADJ,EAEI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEH;AAAtB,IAFJ,EAGKC,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD,EAAST,KAAT;AAAA,WACT,oBAAC,MAAD;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,OAAO,EAAEC,OAFb;AAGI,MAAA,MAAM,EAAEQ,MAHZ;AAII,MAAA,IAAI,EAAEJ,IAJV;AAKI,MAAA,UAAU,EAAEL,KALhB;AAMI,MAAA,YAAY,EAAEG;AANlB,MADS;AAAA,GAAZ,CAHL,CADJ;AAgBH,CAjBD;;AAmBA,eAAeH,KAAf;;IAEMU,K;;;;;;;;;;;;;;;;;;oFACM,E;;+FAEW,UAAAC,UAAU;AAAA,aAAI,MAAKC,QAAL,CAAc;AAAED,QAAAA,UAAU,EAAVA;AAAF,OAAd,CAAJ;AAAA,K;;;;;;;6BACpB;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEL,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,KAAK,EAAE;AAArC;AAAb,SAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEI,UAAjB;AAA6B,QAAA,OAAO;AAApC,SACI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEN,IAAlB;AAAwB,QAAA,gBAAgB,EAAED;AAA1C,QADJ,CAFJ,EAOI,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEH;AAAtB,QAPJ,EAQKC,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD,EAAST,KAAT;AAAA,eACT,oBAAC,MAAD;AACI,UAAA,GAAG,EAAEA,KADT;AAEI,UAAA,OAAO,EAAEC,OAFb;AAGI,UAAA,MAAM,EAAEQ,MAHZ;AAII,UAAA,IAAI,EAAEJ,IAJV;AAKI,UAAA,UAAU,EAAEL,KALhB;AAMI,UAAA,YAAY,EAAEG;AANlB,UADS;AAAA,OAAZ,CARL,CADJ;AAqBH;;;;EA1BeV,KAAK,CAACoB,S","sourcesContent":["import React from 'react';\nimport { Grid, Rail, Sticky } from 'semantic-ui-react';\nimport ModeHeader from './ModeHeader';\nimport StatsHeader from './StatsHeader';\nimport Player from './Player';\n\nconst index = ({ columns, players, removePlayer, handleModeChange, mode }) => {\n    return (\n        <Grid style={{ backgroundColor: '#2c3c57', color: 'white' }}>\n            <ModeHeader mode={mode} handleModeChange={handleModeChange} />\n            <StatsHeader columns={columns} />\n            {players.map((player, index) => (\n                <Player\n                    key={index}\n                    columns={columns}\n                    player={player}\n                    mode={mode}\n                    boardIndex={index}\n                    removePlayer={removePlayer}\n                />\n            ))}\n        </Grid>\n    );\n};\n\nexport default index;\n\nclass board extends React.Component {\n    state = {};\n\n    handleContextRef = contextRef => this.setState({ contextRef });\n    render() {\n        return (\n            <Grid style={{ backgroundColor: '#2c3c57', color: 'white' }}>\n                {/* <Rail position=\"left\" internal attached> */}\n                <Sticky context={contextRef} pushing>\n                    <ModeHeader mode={mode} handleModeChange={handleModeChange} />\n                </Sticky>\n                {/* </Rail> */}\n\n                <StatsHeader columns={columns} />\n                {players.map((player, index) => (\n                    <Player\n                        key={index}\n                        columns={columns}\n                        player={player}\n                        mode={mode}\n                        boardIndex={index}\n                        removePlayer={removePlayer}\n                    />\n                ))}\n            </Grid>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}