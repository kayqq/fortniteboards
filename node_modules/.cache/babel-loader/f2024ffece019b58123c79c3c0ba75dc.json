{"ast":null,"code":"import React from 'react';\nimport Link from 'next/link';\nimport { Grid, Header, Icon, Responsive } from 'semantic-ui-react';\n\nvar Column = function Column(_ref) {\n  var index = _ref.index,\n      _ref$content = _ref.content,\n      content = _ref$content === void 0 ? null : _ref$content,\n      _ref$matches = _ref.matches,\n      matches = _ref$matches === void 0 ? null : _ref$matches;\n  return React.createElement(Grid.Column, {\n    className: index == 0 ? '' : 'compact',\n    textAlign: index == 0 ? 'left' : 'center',\n    mobile: index == 0 ? '6' : '2'\n  }, React.createElement(Header, {\n    as: index == 0 ? 'h4' : 'h4',\n    style: {\n      color: 'white'\n    }\n  }, content == null ? '' : content, index == 0 ? React.createElement(Header.Subheader, {\n    size: \"small\",\n    style: {\n      color: '#92a2bd',\n      whiteSpace: 'nowrap'\n    }\n  }, matches == null ? 'X' : matches, \" Matches\") : null));\n};\n\nvar Player = function Player(_ref2) {\n  var columns = _ref2.columns,\n      mode = _ref2.mode,\n      player = _ref2.player,\n      boardIndex = _ref2.boardIndex,\n      removePlayer = _ref2.removePlayer;\n  return React.createElement(Grid.Row, {\n    columns: columns.length,\n    stretched: true\n  }, React.createElement(Responsive, {\n    as: Grid.Column,\n    minWidth: Responsive.onlyMobile.maxWidth,\n    textAlign: \"center\",\n    mobile: \"1\"\n  }, React.createElement(Header, {\n    as: \"h6\",\n    style: {\n      color: '#92a2bd'\n    }\n  }, boardIndex + 1)), columns.map(function (column, columnIndex) {\n    if (!player) {\n      return React.createElement(Column, {\n        index: columnIndex\n      });\n    }\n\n    var columnContent = columnIndex === 0 ? React.createElement(Link, {\n      href: \"/profile/\".concat(player.username)\n    }, player.username) : player.stats[\"\".concat(column.accessor, \"_\").concat(mode)];\n    var matches = player.stats[\"matchesplayed_\".concat(mode)];\n    return React.createElement(Column, {\n      key: player.username,\n      index: columnIndex,\n      content: columnContent,\n      matches: matches\n    });\n  }), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    mobile: \"1\",\n    onClick: function onClick() {\n      removePlayer(boardIndex);\n    }\n  }, React.createElement(Icon, {\n    size: \"small\",\n    color: \"red\",\n    name: \"trash alternate outline\"\n  })));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/board/Player.js"],"names":["React","Link","Grid","Header","Icon","Responsive","Column","index","content","matches","color","whiteSpace","Player","columns","mode","player","boardIndex","removePlayer","length","onlyMobile","maxWidth","map","column","columnIndex","columnContent","username","stats","accessor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Grid, Header, Icon, Responsive } from 'semantic-ui-react';\n\nconst Column = ({ index, content = null, matches = null }) => {\n    return (\n        <Grid.Column\n            className={index == 0 ? '' : 'compact'}\n            textAlign={index == 0 ? 'left' : 'center'}\n            mobile={index == 0 ? '6' : '2'}\n        >\n            <Header as={index == 0 ? 'h4' : 'h4'} style={{ color: 'white' }}>\n                {content == null ? '' : content}\n                {index == 0 ? (\n                    <Header.Subheader\n                        size=\"small\"\n                        style={{ color: '#92a2bd', whiteSpace: 'nowrap' }}\n                    >\n                        {matches == null ? 'X' : matches} Matches\n                    </Header.Subheader>\n                ) : null}\n            </Header>\n        </Grid.Column>\n    );\n};\n\nconst Player = ({ columns, mode, player, boardIndex, removePlayer }) => {\n    return (\n        <Grid.Row columns={columns.length} stretched>\n            <Responsive\n                as={Grid.Column}\n                minWidth={Responsive.onlyMobile.maxWidth}\n                textAlign=\"center\"\n                mobile=\"1\"\n            >\n                <Header as=\"h6\" style={{ color: '#92a2bd' }}>\n                    {boardIndex + 1}\n                </Header>\n            </Responsive>\n            {columns.map((column, columnIndex) => {\n                if (!player) {\n                    return <Column index={columnIndex} />;\n                }\n                const columnContent =\n                    columnIndex === 0 ? (\n                        <Link href={`/profile/${player.username}`}>{player.username}</Link>\n                    ) : (\n                        player.stats[`${column.accessor}_${mode}`]\n                    );\n                const matches = player.stats[`matchesplayed_${mode}`];\n                return (\n                    <Column\n                        key={player.username}\n                        index={columnIndex}\n                        content={columnContent}\n                        matches={matches}\n                    />\n                );\n            })}\n            <Grid.Column\n                textAlign=\"center\"\n                mobile=\"1\"\n                onClick={() => {\n                    removePlayer(boardIndex);\n                }}\n            >\n                <Icon size=\"small\" color=\"red\" name=\"trash alternate outline\" />\n            </Grid.Column>\n        </Grid.Row>\n    );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}