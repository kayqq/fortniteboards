{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Divider } from 'semantic-ui-react';\nimport { getProfileByUsername, getUidByUsername, getProfileByUid } from \"../src/actions\";\nimport StatsTable from \"../src/components/Profile/StatsTable\";\nimport TotalStatsTable from \"../src/components/Profile/TotalStatsTable\";\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  _createClass(Profile, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, profile, err, player;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query;\n                _context.next = 3;\n                return getUidByUsername(query.username);\n\n              case 3:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.t0 = {};\n\n              case 6:\n                profile = _context.t0;\n\n                if (profile.uid) {\n                  _context.next = 11;\n                  break;\n                }\n\n                err = new Error();\n                err.code = 'ENOENT';\n                throw err;\n\n              case 11:\n                _context.next = 13;\n                return getUidByUsername(query.username);\n\n              case 13:\n                player = _context.sent;\n                return _context.abrupt(\"return\", {\n                  profile: profile,\n                  player: player\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {\n      profile: {}\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var profile;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return getProfileByUid(this.props.player.uid);\n\n              case 2:\n                profile = _context2.sent;\n                this.setState({\n                  profile: profile\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var profile = this.state.profile;\n      var stats = profile.stats,\n          totals = profile.totals;\n      console.log(profile);\n      return React.createElement(\"div\", null, React.createElement(Container, {\n        text: true,\n        style: {\n          paddingTop: '100px',\n          paddingBottom: '100px',\n          height: '100%'\n        }\n      }));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/pages/profile.js"],"names":["React","Component","Container","Divider","getProfileByUsername","getUidByUsername","getProfileByUid","StatsTable","TotalStatsTable","Profile","query","username","profile","uid","err","Error","code","player","props","state","setState","stats","totals","console","log","paddingTop","paddingBottom","height"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mBAAnC;AAEA,SAASC,oBAAT,EAA+BC,gBAA/B,EAAiDC,eAAjD;AAEA,OAAOC,UAAP;AACA,OAAOC,eAAP;;IAEMC,O;;;;;;;;;;;;;;;;AAC6BC,gBAAAA,K,QAAAA,K;;uBACJL,gBAAgB,CAACK,KAAK,CAACC,QAAP,C;;;;;;;;;;8BAAqB,E;;;AAAtDC,gBAAAA,O;;oBACDA,OAAO,CAACC,G;;;;;AACHC,gBAAAA,G,GAAM,IAAIC,KAAJ,E;AACZD,gBAAAA,GAAG,CAACE,IAAJ,GAAW,QAAX;sBACMF,G;;;;uBAEWT,gBAAgB,CAACK,KAAK,CAACC,QAAP,C;;;AAA/BM,gBAAAA,M;iDACC;AAAEL,kBAAAA,OAAO,EAAPA,OAAF;AAAWK,kBAAAA,MAAM,EAANA;AAAX,iB;;;;;;;;;;;;;;;;;;AAGX,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEP,MAAAA,OAAO,EAAE;AAAX,KAAb;AAFe;AAGlB;;;;;;;;;;;;;;uBAGyBN,eAAe,CAAC,KAAKY,KAAL,CAAWD,MAAX,CAAkBJ,GAAnB,C;;;AAA/BD,gBAAAA,O;AACN,qBAAKQ,QAAL,CAAc;AAAER,kBAAAA,OAAO,EAAEA;AAAX,iBAAd;;;;;;;;;;;;;;;;;;6BAGK;AAAA,UACGA,OADH,GACe,KAAKO,KADpB,CACGP,OADH;AAAA,UAEGS,KAFH,GAEqBT,OAFrB,CAEGS,KAFH;AAAA,UAEUC,MAFV,GAEqBV,OAFrB,CAEUU,MAFV;AAGLC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,aACI,iCACI,oBAAC,SAAD;AACI,QAAA,IAAI,MADR;AAEI,QAAA,KAAK,EAAE;AACHa,UAAAA,UAAU,EAAE,OADT;AAEHC,UAAAA,aAAa,EAAE,OAFZ;AAGHC,UAAAA,MAAM,EAAE;AAHL;AAFX,QADJ,CADJ;AAoDH;;;;EA9EiB1B,S;;AAiFtB,eAAeQ,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Divider } from 'semantic-ui-react';\n\nimport { getProfileByUsername, getUidByUsername, getProfileByUid } from '../src/actions';\n\nimport StatsTable from '../src/components/Profile/StatsTable';\nimport TotalStatsTable from '../src/components/Profile/TotalStatsTable';\n\nclass Profile extends Component {\n    static async getInitialProps({ query }) {\n        const profile = (await getUidByUsername(query.username)) || {};\n        if (!profile.uid) {\n            const err = new Error();\n            err.code = 'ENOENT';\n            throw err;\n        }\n        const player = await getUidByUsername(query.username);\n        return { profile, player };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = { profile: {} };\n    }\n\n    async componentDidMount() {\n        const profile = await getProfileByUid(this.props.player.uid);\n        this.setState({ profile: profile });\n    }\n\n    render() {\n        const { profile } = this.state;\n        const { stats, totals } = profile;\n        console.log(profile);\n        return (\n            <div>\n                <Container\n                    text\n                    style={{\n                        paddingTop: '100px',\n                        paddingBottom: '100px',\n                        height: '100%'\n                    }}\n                >\n                    {/* <TotalStatsTable\n                        username={profile.username}\n                        kd={totals.kd}\n                        kills={totals.kills}\n                        wins={totals.wins}\n                        winrate={totals.winrate}\n                        matches={totals.matchesplayed}\n                    />\n                    <Divider hidden />\n                    <StatsTable\n                        kd={stats.kd_solo}\n                        kills={stats.kills_solo}\n                        wins={stats.placetop1_solo}\n                        winrate={stats.winrate_solo}\n                        matches={stats.matchesplayed_solo}\n                        mode=\"SOLO\"\n                    />\n\n                    <Divider hidden />\n\n                    <StatsTable\n                        kd={stats.kd_duo}\n                        kills={stats.kills_duo}\n                        wins={stats.placetop1_duo}\n                        winrate={stats.winrate_duo}\n                        matches={stats.matchesplayed_duo}\n                        mode=\"DUO\"\n                    />\n\n                    <Divider hidden />\n\n                    <StatsTable\n                        kd={stats.kd_squad}\n                        kills={stats.kills_squad}\n                        wins={stats.placetop1_squad}\n                        winrate={stats.winrate_squad}\n                        matches={stats.matchesplayed_squad}\n                        mode=\"SQUAD\"\n                    />*/}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}