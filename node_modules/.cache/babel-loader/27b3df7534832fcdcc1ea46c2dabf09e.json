{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Label } from 'semantic-ui-react';\n\nvar resultRenderer = function resultRenderer(_ref) {\n  var uid = _ref.uid,\n      username = _ref.username;\n  return React.createElement(Label, {\n    key: uid,\n    content: username\n  });\n};\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"resetComponent\", function () {\n      return _this.setState({\n        isLoading: false,\n        value: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleResultSelect\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, _ref2) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                result = _ref2.result;\n\n                _this.setState({\n                  value: result.username,\n                  isLoading: true\n                });\n\n                _context.next = 4;\n                return _this.props.handleResultSelect(result.username, _this.resetComponent);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSearchChange\", function (e, _ref4) {\n      var value = _ref4.value;\n\n      _this.setState({\n        isLoading: true,\n        value: value\n      }, function () {\n        // reset loading if empty\n        if (_this.state.value.length < 1) return _this.resetComponent(); // fetch users by username\n\n        _this.props.fetchByUsername(_this.state.value, function () {\n          _this.setState({\n            isLoading: false\n          }); // prefetch first result\n\n\n          var results = _this.props.results;\n\n          if (results.length) {\n            var firstResult = results[0].username;\n            if (_this.props.prefetchRoute) _this.props.prefetchRoute(firstResult);\n          }\n        });\n      });\n    });\n\n    _this.state = {\n      value: '',\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.resetComponent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value;\n      var results = this.props.results;\n      return React.createElement(Search, {\n        input: {\n          fluid: true,\n          icon: 'arrow circle right'\n        },\n        loading: isLoading,\n        placeholder: 'Enter your Epic username',\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: _.debounce(this.handleSearchChange, 500, {\n          leading: true\n        }),\n        results: results,\n        resultRenderer: resultRenderer,\n        value: value,\n        showNoResults: false\n      });\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nexport { SearchBar as default };","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/SearchBar.js"],"names":["_","React","Component","Search","Label","resultRenderer","uid","username","SearchBar","props","setState","isLoading","value","e","result","handleResultSelect","resetComponent","state","length","fetchByUsername","results","firstResult","prefetchRoute","fluid","icon","debounce","handleSearchChange","leading"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Label } from 'semantic-ui-react';\n\nconst resultRenderer = ({ uid, username }) => <Label key={uid} content={username} />;\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n      isLoading: false\n    };\n  }\n\n  componentWillMount() {\n    this.resetComponent();\n  }\n\n  resetComponent = () => this.setState({ isLoading: false, value: '' });\n\n  handleResultSelect = async (e, { result }) => {\n    this.setState({ value: result.username, isLoading: true });\n    await this.props.handleResultSelect(result.username, this.resetComponent);\n  };\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value }, () => {\n      // reset loading if empty\n      if (this.state.value.length < 1) return this.resetComponent();\n\n      // fetch users by username\n      this.props.fetchByUsername(this.state.value, () => {\n        this.setState({ isLoading: false });\n        // prefetch first result\n        const { results } = this.props;\n        if (results.length) {\n          const firstResult = results[0].username;\n          if (this.props.prefetchRoute) this.props.prefetchRoute(firstResult);\n        }\n      });\n    });\n  };\n\n  render() {\n    const { isLoading, value } = this.state;\n    const { results } = this.props;\n    return (\n      <Search\n        input={{ fluid: true, icon: 'arrow circle right' }}\n        loading={isLoading}\n        placeholder={'Enter your Epic username'}\n        onResultSelect={this.handleResultSelect}\n        onSearchChange={_.debounce(this.handleSearchChange, 500, {\n          leading: true\n        })}\n        results={results}\n        resultRenderer={resultRenderer}\n        value={value}\n        showNoResults={false}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}