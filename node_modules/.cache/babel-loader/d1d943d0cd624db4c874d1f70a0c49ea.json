{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Header, Grid, Divider } from 'semantic-ui-react';\nimport { getProfile } from \"../src/actions\";\n\nvar StatsTable = function StatsTable(_ref) {\n  var kd = _ref.kd,\n      kills = _ref.kills,\n      wins = _ref.wins,\n      winrate = _ref.winrate,\n      matches = _ref.matches,\n      mode = _ref.mode;\n  var backgroundColor = '';\n\n  switch (mode) {\n    case 'SOLO':\n      backgroundColor = '#14c8ff';\n      break;\n\n    case 'DUO':\n      backgroundColor = '#f3af19';\n      break;\n\n    case 'SQUAD':\n      backgroundColor = '#9d4dbb';\n      break;\n\n    default:\n      break;\n  }\n\n  return React.createElement(Grid, {\n    style: {\n      backgroundColor: '#2c3c57',\n      color: 'white'\n    }\n  }, React.createElement(Grid.Row, {\n    style: {\n      backgroundColor: backgroundColor\n    }\n  }, React.createElement(Grid.Column, null, mode)), React.createElement(Grid.Row, {\n    columns: \"5\",\n    stretched: true\n  }, React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, kd, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"K/D\"))), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, wins, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Wins\"))), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, kills, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Kills\"))), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, winrate, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Win %\"))), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, matches, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Matches\")))));\n};\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  _createClass(Profile, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref2) {\n        var store, query, pathname, asPath, req, profile, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref2.store, query = _ref2.query, pathname = _ref2.pathname, asPath = _ref2.asPath, req = _ref2.req;\n                _context.next = 3;\n                return getProfile(query.username);\n\n              case 3:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.t0 = {};\n\n              case 6:\n                profile = _context.t0;\n\n                if (profile.uid) {\n                  _context.next = 11;\n                  break;\n                }\n\n                err = new Error();\n                err.code = 'ENOENT';\n                throw err;\n\n              case 11:\n                console.log('profile');\n                return _context.abrupt(\"return\", {\n                  profile: profile\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var profile = this.props.profile;\n      var stats = profile.stats;\n      var totals = profile.totals;\n      return React.createElement(\"div\", null, React.createElement(Container, {\n        text: true,\n        style: {\n          marginTop: '1em'\n        }\n      }, React.createElement(Grid, {\n        style: {\n          backgroundColor: '#2c3c57',\n          color: 'white'\n        }\n      }, React.createElement(Grid.Row, {\n        stretched: true,\n        style: {\n          backgroundColor: '#6c80a2'\n        }\n      }, React.createElement(Grid.Column, null, React.createElement(Grid.Row, null, React.createElement(Header, {\n        as: \"h1\",\n        style: {\n          color: 'white'\n        }\n      }, profile.username, React.createElement(Header.Subheader, null, \"Season 7\"))), React.createElement(Grid.Row, null, totals.matchesplayed, \" Matches\"))), React.createElement(Grid.Row, {\n        style: {\n          height: '200px'\n        },\n        columns: \"2\"\n      }, React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\"\n      }, React.createElement(Header, {\n        size: \"medium\",\n        style: {\n          color: 'white'\n        }\n      }, totals.wins, React.createElement(Header.Subheader, {\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"Wins\"))), React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\"\n      }, React.createElement(Header, {\n        size: \"medium\",\n        style: {\n          color: 'white'\n        }\n      }, totals.winrate, React.createElement(Header.Subheader, {\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"Win %\"))), React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\"\n      }, React.createElement(Header, {\n        size: \"medium\",\n        style: {\n          color: 'white'\n        }\n      }, totals.kills, React.createElement(Header.Subheader, {\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"Kills\"))), React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\"\n      }, React.createElement(Header, {\n        size: \"medium\",\n        style: {\n          color: 'white'\n        }\n      }, totals.kd, React.createElement(Header.Subheader, {\n        style: {\n          color: '#92a2bd'\n        }\n      }, \"K/D\"))))), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_solo,\n        kills: stats.kills_solo,\n        wins: stats.placetop1_solo,\n        winrate: stats.winrate_solo,\n        matches: stats.matchesplayed_solo,\n        mode: \"SOLO\"\n      }), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_duo,\n        kills: stats.kills_duo,\n        wins: stats.placetop1_duo,\n        winrate: stats.winrate_duo,\n        matches: stats.matchesplayed_duo,\n        mode: \"DUO\"\n      }), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_squad,\n        kills: stats.kills_squad,\n        wins: stats.placetop1_squad,\n        winrate: stats.winrate_squad,\n        matches: stats.matchesplayed_squad,\n        mode: \"SQUAD\"\n      })));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(Profile);","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/pages/profile.js"],"names":["React","Component","connect","Container","Header","Grid","Divider","getProfile","StatsTable","kd","kills","wins","winrate","matches","mode","backgroundColor","color","Profile","store","query","pathname","asPath","req","username","profile","uid","err","Error","code","console","log","props","state","stats","totals","marginTop","matchesplayed","height","kd_solo","kills_solo","placetop1_solo","winrate_solo","matchesplayed_solo","kd_duo","kills_duo","placetop1_duo","winrate_duo","matchesplayed_duo","kd_squad","kills_squad","placetop1_squad","winrate_squad","matchesplayed_squad","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Header, Grid, Divider } from 'semantic-ui-react';\n\nimport { getProfile } from '../src/actions';\n\nconst StatsTable = ({ kd, kills, wins, winrate, matches, mode }) => {\n    let backgroundColor = '';\n    switch (mode) {\n        case 'SOLO':\n            backgroundColor = '#14c8ff';\n            break;\n        case 'DUO':\n            backgroundColor = '#f3af19';\n            break;\n        case 'SQUAD':\n            backgroundColor = '#9d4dbb';\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <Grid style={{ backgroundColor: '#2c3c57', color: 'white' }}>\n            <Grid.Row style={{ backgroundColor }}>\n                <Grid.Column>{mode}</Grid.Column>\n            </Grid.Row>\n            {/* <Divider clearing /> */}\n\n            <Grid.Row columns=\"5\" stretched>\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {kd}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>K/D</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {wins}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Wins</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {kills}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Kills</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {winrate}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Win %</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {matches}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Matches</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n};\n\nclass Profile extends Component {\n    static async getInitialProps({ store, query, pathname, asPath, req }) {\n        const profile = (await getProfile(query.username)) || {};\n        if (!profile.uid) {\n            const err = new Error();\n            err.code = 'ENOENT';\n            throw err;\n        }\n        console.log('profile');\n        return { profile };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { stats } = profile;\n        const { totals } = profile;\n\n        return (\n            <div>\n                <Container text style={{ marginTop: '1em' }}>\n                    <Grid style={{ backgroundColor: '#2c3c57', color: 'white' }}>\n                        <Grid.Row stretched style={{ backgroundColor: '#6c80a2' }}>\n                            <Grid.Column>\n                                {/* <Image\n                    src=\"https://pm1.narvii.com/6918/222ae5aa45c92f4ce6b86e39d3be5c0385473d9er1-928-760v2_hq.jpg\"\n                    size=\"small\"\n                    circular\n                  /> */}\n                                <Grid.Row>\n                                    <Header as=\"h1\" style={{ color: 'white' }}>\n                                        {profile.username}\n                                        <Header.Subheader>Season 7</Header.Subheader>\n                                    </Header>\n                                </Grid.Row>\n                                <Grid.Row>{totals.matchesplayed} Matches</Grid.Row>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row style={{ height: '200px' }} columns=\"2\">\n                            <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                                <Header size=\"medium\" style={{ color: 'white' }}>\n                                    {totals.wins}\n                                    <Header.Subheader style={{ color: '#92a2bd' }}>\n                                        Wins\n                                    </Header.Subheader>\n                                </Header>\n                            </Grid.Column>\n                            <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                                <Header size=\"medium\" style={{ color: 'white' }}>\n                                    {totals.winrate}\n                                    <Header.Subheader style={{ color: '#92a2bd' }}>\n                                        Win %\n                                    </Header.Subheader>\n                                </Header>\n                            </Grid.Column>\n\n                            <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                                <Header size=\"medium\" style={{ color: 'white' }}>\n                                    {totals.kills}\n                                    <Header.Subheader style={{ color: '#92a2bd' }}>\n                                        Kills\n                                    </Header.Subheader>\n                                </Header>\n                            </Grid.Column>\n                            <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                                <Header size=\"medium\" style={{ color: 'white' }}>\n                                    {totals.kd}\n                                    <Header.Subheader style={{ color: '#92a2bd' }}>\n                                        K/D\n                                    </Header.Subheader>\n                                </Header>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n\n                    <Divider hidden />\n                    <StatsTable\n                        kd={stats.kd_solo}\n                        kills={stats.kills_solo}\n                        wins={stats.placetop1_solo}\n                        winrate={stats.winrate_solo}\n                        matches={stats.matchesplayed_solo}\n                        mode=\"SOLO\"\n                    />\n\n                    <Divider hidden />\n\n                    <StatsTable\n                        kd={stats.kd_duo}\n                        kills={stats.kills_duo}\n                        wins={stats.placetop1_duo}\n                        winrate={stats.winrate_duo}\n                        matches={stats.matchesplayed_duo}\n                        mode=\"DUO\"\n                    />\n\n                    <Divider hidden />\n\n                    <StatsTable\n                        kd={stats.kd_squad}\n                        kills={stats.kills_squad}\n                        wins={stats.placetop1_squad}\n                        winrate={stats.winrate_squad}\n                        matches={stats.matchesplayed_squad}\n                        mode=\"SQUAD\"\n                    />\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\n\nexport default connect(\n    mapStateToProps,\n    {}\n)(Profile);\n"]},"metadata":{},"sourceType":"module"}