{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Container, Header, Grid, Divider, Image, Card } from 'semantic-ui-react';\nimport { getProfileByUsername } from \"../src/actions\";\n\nvar StatsTable = function StatsTable(_ref) {\n  var kd = _ref.kd,\n      kills = _ref.kills,\n      wins = _ref.wins,\n      winrate = _ref.winrate,\n      matches = _ref.matches,\n      mode = _ref.mode;\n  var backgroundColor = '';\n\n  switch (mode) {\n    case 'SOLO':\n      backgroundColor = '#14c8ff';\n      break;\n\n    case 'DUO':\n      backgroundColor = '#f3af19';\n      break;\n\n    case 'SQUAD':\n      backgroundColor = '#9d4dbb';\n      break;\n\n    default:\n      break;\n  }\n\n  return React.createElement(Grid, {\n    style: {\n      backgroundColor: '#2c3c57',\n      color: 'white'\n    }\n  }, React.createElement(Grid.Row, {\n    style: {\n      backgroundColor: backgroundColor\n    }\n  }, React.createElement(Grid.Column, null, mode)), React.createElement(Grid.Row, {\n    columns: \"5\",\n    stretched: true\n  }, React.createElement(Grid.Column, {\n    className: \"compact\",\n    mobile: \"3\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"tiny\",\n    style: {\n      color: 'white'\n    }\n  }, kd, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"K/D\"))), React.createElement(Grid.Column, {\n    className: \"compact\",\n    mobile: \"3\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"tiny\",\n    style: {\n      color: 'white'\n    }\n  }, wins, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Wins\"))), React.createElement(Grid.Column, {\n    mobile: \"3\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"tiny\",\n    style: {\n      color: 'white'\n    }\n  }, kills, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Kills\"))), React.createElement(Grid.Column, {\n    mobile: \"4\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"tiny\",\n    style: {\n      color: 'white'\n    }\n  }, winrate, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Win %\"))), React.createElement(Grid.Column, {\n    mobile: \"3\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"tiny\",\n    style: {\n      color: 'white'\n    }\n  }, matches, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Matches\")))));\n};\n\nvar TotalStatsTable = function TotalStatsTable(_ref2) {\n  var username = _ref2.username,\n      kd = _ref2.kd,\n      kills = _ref2.kills,\n      wins = _ref2.wins,\n      winrate = _ref2.winrate,\n      matches = _ref2.matches;\n  return React.createElement(Grid, null, React.createElement(Card, {\n    raised: true,\n    fluid: true,\n    style: {\n      backgroundColor: '#6c80a2'\n    }\n  }, React.createElement(Card.Content, null, React.createElement(Image, {\n    bordered: true,\n    floated: \"right\",\n    size: \"tiny\",\n    src: \"https://pm1.narvii.com/6918/222ae5aa45c92f4ce6b86e39d3be5c0385473d9er1-928-760v2_hq.jpg\"\n  }), React.createElement(Card.Header, null, React.createElement(Header, {\n    as: \"h1\",\n    style: {\n      color: 'white'\n    }\n  }, username, React.createElement(Header.Subheader, null, \"Season 7\"))), React.createElement(Card.Meta, null, matches, \" Matches\"))), React.createElement(Grid.Row, {\n    style: {\n      backgroundColor: '#6c80a2'\n    }\n  }, React.createElement(Grid.Column, null, \"Season Totals\")), React.createElement(Grid.Row, {\n    style: {\n      backgroundColor: '#2c3c57',\n      color: 'white',\n      height: '200px',\n      marginBottom: '20px'\n    },\n    columns: \"2\"\n  }, React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, wins, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Wins\"))), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, winrate, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Win %\"))), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, kills, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"Kills\"))), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\"\n  }, React.createElement(Header, {\n    size: \"medium\",\n    style: {\n      color: 'white'\n    }\n  }, kd, React.createElement(Header.Subheader, {\n    style: {\n      color: '#92a2bd'\n    }\n  }, \"K/D\")))));\n};\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  _createClass(Profile, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref3) {\n        var store, query, pathname, asPath, req, profile, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref3.store, query = _ref3.query, pathname = _ref3.pathname, asPath = _ref3.asPath, req = _ref3.req;\n                _context.next = 3;\n                return getProfileByUsername(query.username);\n\n              case 3:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.t0 = {};\n\n              case 6:\n                profile = _context.t0;\n\n                if (profile.uid) {\n                  _context.next = 11;\n                  break;\n                }\n\n                err = new Error();\n                err.code = 'ENOENT';\n                throw err;\n\n              case 11:\n                return _context.abrupt(\"return\", {\n                  profile: profile\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var profile = this.props.profile;\n      var stats = profile.stats,\n          totals = profile.totals;\n      console.log(profile);\n      return React.createElement(\"div\", null, React.createElement(Container, {\n        text: true,\n        style: {\n          paddingTop: '100px',\n          paddingBottom: '100px',\n          height: '100%'\n        }\n      }, React.createElement(TotalStatsTable, {\n        username: profile.username,\n        kd: totals.kd,\n        kills: totals.kills,\n        wins: totals.wins,\n        winrate: totals.winrate,\n        matches: totals.matchesplayed\n      }), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_solo,\n        kills: stats.kills_solo,\n        wins: stats.placetop1_solo,\n        winrate: stats.winrate_solo,\n        matches: stats.matchesplayed_solo,\n        mode: \"SOLO\"\n      }), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_duo,\n        kills: stats.kills_duo,\n        wins: stats.placetop1_duo,\n        winrate: stats.winrate_duo,\n        matches: stats.matchesplayed_duo,\n        mode: \"DUO\"\n      }), React.createElement(Divider, {\n        hidden: true\n      }), React.createElement(StatsTable, {\n        kd: stats.kd_squad,\n        kills: stats.kills_squad,\n        wins: stats.placetop1_squad,\n        winrate: stats.winrate_squad,\n        matches: stats.matchesplayed_squad,\n        mode: \"SQUAD\"\n      })));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/pages/profile.js"],"names":["React","Component","Container","Header","Grid","Divider","Image","Card","getProfileByUsername","StatsTable","kd","kills","wins","winrate","matches","mode","backgroundColor","color","TotalStatsTable","username","height","marginBottom","Profile","store","query","pathname","asPath","req","profile","uid","err","Error","code","props","state","stats","totals","console","log","paddingTop","paddingBottom","matchesplayed","kd_solo","kills_solo","placetop1_solo","winrate_solo","matchesplayed_solo","kd_duo","kills_duo","placetop1_duo","winrate_duo","matchesplayed_duo","kd_squad","kills_squad","placetop1_squad","winrate_squad","matchesplayed_squad"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Header, Grid, Divider, Image, Card } from 'semantic-ui-react';\n\nimport { getProfileByUsername } from '../src/actions';\n\nconst StatsTable = ({ kd, kills, wins, winrate, matches, mode }) => {\n    let backgroundColor = '';\n    switch (mode) {\n        case 'SOLO':\n            backgroundColor = '#14c8ff';\n            break;\n        case 'DUO':\n            backgroundColor = '#f3af19';\n            break;\n        case 'SQUAD':\n            backgroundColor = '#9d4dbb';\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <Grid style={{ backgroundColor: '#2c3c57', color: 'white' }}>\n            <Grid.Row style={{ backgroundColor }}>\n                <Grid.Column>{mode}</Grid.Column>\n            </Grid.Row>\n            {/* <Divider clearing /> */}\n\n            <Grid.Row columns=\"5\" stretched>\n                <Grid.Column\n                    className=\"compact\"\n                    mobile=\"3\"\n                    textAlign=\"center\"\n                    verticalAlign=\"middle\"\n                >\n                    <Header size=\"tiny\" style={{ color: 'white' }}>\n                        {kd}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>K/D</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column\n                    className=\"compact\"\n                    mobile=\"3\"\n                    textAlign=\"center\"\n                    verticalAlign=\"middle\"\n                >\n                    <Header size=\"tiny\" style={{ color: 'white' }}>\n                        {wins}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Wins</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column mobile=\"3\" textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"tiny\" style={{ color: 'white' }}>\n                        {kills}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Kills</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column mobile=\"4\" textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"tiny\" style={{ color: 'white' }}>\n                        {winrate}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Win %</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column mobile=\"3\" textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"tiny\" style={{ color: 'white' }}>\n                        {matches}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Matches</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n};\n\nconst TotalStatsTable = ({ username, kd, kills, wins, winrate, matches }) => {\n    return (\n        <Grid>\n            {/* ********************** */}\n            <Card raised fluid style={{ backgroundColor: '#6c80a2' }}>\n                <Card.Content>\n                    <Image\n                        bordered\n                        floated=\"right\"\n                        size=\"tiny\"\n                        src=\"https://pm1.narvii.com/6918/222ae5aa45c92f4ce6b86e39d3be5c0385473d9er1-928-760v2_hq.jpg\"\n                    />\n                    <Card.Header>\n                        <Header as=\"h1\" style={{ color: 'white' }}>\n                            {username}\n                            <Header.Subheader>Season 7</Header.Subheader>\n                        </Header>\n                    </Card.Header>\n                    <Card.Meta>{matches} Matches</Card.Meta>\n                </Card.Content>\n            </Card>\n            <Grid.Row style={{ backgroundColor: '#6c80a2' }}>\n                <Grid.Column>Season Totals</Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row\n                style={{\n                    backgroundColor: '#2c3c57',\n                    color: 'white',\n                    height: '200px',\n                    marginBottom: '20px'\n                }}\n                columns=\"2\"\n            >\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {wins}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Wins</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {winrate}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Win %</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {kills}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>Kills</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                    <Header size=\"medium\" style={{ color: 'white' }}>\n                        {kd}\n                        <Header.Subheader style={{ color: '#92a2bd' }}>K/D</Header.Subheader>\n                    </Header>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n};\n\nclass Profile extends Component {\n    static async getInitialProps({ store, query, pathname, asPath, req }) {\n        const profile = (await getProfileByUsername(query.username)) || {};\n        if (!profile.uid) {\n            const err = new Error();\n            err.code = 'ENOENT';\n            throw err;\n        }\n        return { profile };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { stats, totals } = profile;\n        console.log(profile);\n\n        return (\n            <div>\n                <Container\n                    text\n                    style={{\n                        paddingTop: '100px',\n                        paddingBottom: '100px',\n                        height: '100%'\n                    }}\n                >\n                    <TotalStatsTable\n                        username={profile.username}\n                        kd={totals.kd}\n                        kills={totals.kills}\n                        wins={totals.wins}\n                        winrate={totals.winrate}\n                        matches={totals.matchesplayed}\n                    />\n                    <Divider hidden />\n                    <StatsTable\n                        kd={stats.kd_solo}\n                        kills={stats.kills_solo}\n                        wins={stats.placetop1_solo}\n                        winrate={stats.winrate_solo}\n                        matches={stats.matchesplayed_solo}\n                        mode=\"SOLO\"\n                    />\n\n                    <Divider hidden />\n\n                    <StatsTable\n                        kd={stats.kd_duo}\n                        kills={stats.kills_duo}\n                        wins={stats.placetop1_duo}\n                        winrate={stats.winrate_duo}\n                        matches={stats.matchesplayed_duo}\n                        mode=\"DUO\"\n                    />\n\n                    <Divider hidden />\n\n                    <StatsTable\n                        kd={stats.kd_squad}\n                        kills={stats.kills_squad}\n                        wins={stats.placetop1_squad}\n                        winrate={stats.winrate_squad}\n                        matches={stats.matchesplayed_squad}\n                        mode=\"SQUAD\"\n                    />\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}