{"ast":null,"code":"import React from 'react';\nimport Link from 'next/link';\nimport { Grid, Header, Icon, Responsive } from 'semantic-ui-react';\n\nvar column = function column() {\n  return React.createElement(Grid.Column, {\n    className: columnIndex == 0 ? '' : 'compact',\n    key: columnIndex,\n    textAlign: columnIndex == 0 ? 'left' : 'center',\n    mobile: columnIndex == 0 ? '6' : '2'\n  }, React.createElement(Header, {\n    as: columnIndex == 0 ? 'h4' : 'h4',\n    style: {\n      color: 'white'\n    }\n  }, columnIndex == 0 ? React.createElement(Header.Subheader, {\n    size: \"small\",\n    style: {\n      color: '#92a2bd',\n      whiteSpace: 'nowrap'\n    }\n  }, \"X Matches\") : null));\n};\n\nvar Player = function Player(_ref) {\n  var columns = _ref.columns,\n      mode = _ref.mode,\n      player = _ref.player,\n      boardIndex = _ref.boardIndex,\n      removePlayer = _ref.removePlayer;\n  return React.createElement(Grid.Row, {\n    columns: columns.length,\n    stretched: true\n  }, React.createElement(Responsive, {\n    as: Grid.Column,\n    minWidth: Responsive.onlyMobile.maxWidth,\n    textAlign: \"center\",\n    mobile: \"1\"\n  }, React.createElement(Header, {\n    as: \"h6\",\n    style: {\n      color: '#92a2bd'\n    }\n  }, boardIndex + 1)), columns.map(function (column, columnIndex) {\n    if (!player) {\n      return React.createElement(Grid.Column, {\n        className: columnIndex == 0 ? '' : 'compact',\n        key: columnIndex,\n        textAlign: columnIndex == 0 ? 'left' : 'center',\n        mobile: columnIndex == 0 ? '6' : '2'\n      }, React.createElement(Header, {\n        as: columnIndex == 0 ? 'h4' : 'h4',\n        style: {\n          color: 'white'\n        }\n      }, columnIndex == 0 ? React.createElement(Header.Subheader, {\n        size: \"small\",\n        style: {\n          color: '#92a2bd',\n          whiteSpace: 'nowrap'\n        }\n      }, \"X Matches\") : null));\n    }\n\n    var columnContent = columnIndex === 0 ? React.createElement(Link, {\n      href: \"/profile/\".concat(player.username)\n    }, player.username) : player.stats[\"\".concat(column.accessor, \"_\").concat(mode)];\n    return React.createElement(Grid.Column, {\n      className: columnIndex == 0 ? '' : 'compact',\n      key: columnIndex,\n      textAlign: columnIndex == 0 ? 'left' : 'center',\n      mobile: columnIndex == 0 ? '6' : '2'\n    }, React.createElement(Header, {\n      as: columnIndex == 0 ? 'h4' : 'h4',\n      style: {\n        color: 'white'\n      }\n    }, columnContent, columnIndex == 0 ? React.createElement(Header.Subheader, {\n      size: \"small\",\n      style: {\n        color: '#92a2bd',\n        whiteSpace: 'nowrap'\n      }\n    }, player.stats[\"matchesplayed_\".concat(mode)], \" Matches\") : null));\n  }), React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    mobile: \"1\",\n    onClick: function onClick() {\n      removePlayer(boardIndex);\n    }\n  }, React.createElement(Icon, {\n    size: \"small\",\n    color: \"red\",\n    name: \"trash alternate outline\"\n  })));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/components/board/Player.js"],"names":["React","Link","Grid","Header","Icon","Responsive","column","columnIndex","color","whiteSpace","Player","columns","mode","player","boardIndex","removePlayer","length","Column","onlyMobile","maxWidth","map","columnContent","username","stats","accessor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Grid, Header, Icon, Responsive } from 'semantic-ui-react';\n\nconst column = () => {\n    return (\n        <Grid.Column\n            className={columnIndex == 0 ? '' : 'compact'}\n            key={columnIndex}\n            textAlign={columnIndex == 0 ? 'left' : 'center'}\n            mobile={columnIndex == 0 ? '6' : '2'}\n        >\n            <Header as={columnIndex == 0 ? 'h4' : 'h4'} style={{ color: 'white' }}>\n                {columnIndex == 0 ? (\n                    <Header.Subheader\n                        size=\"small\"\n                        style={{ color: '#92a2bd', whiteSpace: 'nowrap' }}\n                    >\n                        X Matches\n                    </Header.Subheader>\n                ) : null}\n            </Header>\n        </Grid.Column>\n    );\n};\n\nconst Player = ({ columns, mode, player, boardIndex, removePlayer }) => {\n    return (\n        <Grid.Row columns={columns.length} stretched>\n            <Responsive\n                as={Grid.Column}\n                minWidth={Responsive.onlyMobile.maxWidth}\n                textAlign=\"center\"\n                mobile=\"1\"\n            >\n                <Header as=\"h6\" style={{ color: '#92a2bd' }}>\n                    {boardIndex + 1}\n                </Header>\n            </Responsive>\n            {columns.map((column, columnIndex) => {\n                if (!player) {\n                    return (\n                        <Grid.Column\n                            className={columnIndex == 0 ? '' : 'compact'}\n                            key={columnIndex}\n                            textAlign={columnIndex == 0 ? 'left' : 'center'}\n                            mobile={columnIndex == 0 ? '6' : '2'}\n                        >\n                            <Header as={columnIndex == 0 ? 'h4' : 'h4'} style={{ color: 'white' }}>\n                                {columnIndex == 0 ? (\n                                    <Header.Subheader\n                                        size=\"small\"\n                                        style={{ color: '#92a2bd', whiteSpace: 'nowrap' }}\n                                    >\n                                        X Matches\n                                    </Header.Subheader>\n                                ) : null}\n                            </Header>\n                        </Grid.Column>\n                    );\n                }\n                const columnContent =\n                    columnIndex === 0 ? (\n                        <Link href={`/profile/${player.username}`}>{player.username}</Link>\n                    ) : (\n                        player.stats[`${column.accessor}_${mode}`]\n                    );\n                return (\n                    <Grid.Column\n                        className={columnIndex == 0 ? '' : 'compact'}\n                        key={columnIndex}\n                        textAlign={columnIndex == 0 ? 'left' : 'center'}\n                        mobile={columnIndex == 0 ? '6' : '2'}\n                    >\n                        <Header as={columnIndex == 0 ? 'h4' : 'h4'} style={{ color: 'white' }}>\n                            {columnContent}\n                            {columnIndex == 0 ? (\n                                <Header.Subheader\n                                    size=\"small\"\n                                    style={{ color: '#92a2bd', whiteSpace: 'nowrap' }}\n                                >\n                                    {player.stats[`matchesplayed_${mode}`]} Matches\n                                </Header.Subheader>\n                            ) : null}\n                        </Header>\n                    </Grid.Column>\n                );\n            })}\n            <Grid.Column\n                textAlign=\"center\"\n                mobile=\"1\"\n                onClick={() => {\n                    removePlayer(boardIndex);\n                }}\n            >\n                <Icon size=\"small\" color=\"red\" name=\"trash alternate outline\" />\n            </Grid.Column>\n        </Grid.Row>\n    );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}