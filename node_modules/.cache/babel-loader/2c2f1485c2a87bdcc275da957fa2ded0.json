{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { FETCH_BY_PLAYERNAME_REQUESTED, FETCH_BY_PLAYERNAME_SUCCESS, FETCH_BY_PLAYERNAME_FAILURE } from \"./constants\";\nexport var fetchByUsername = function fetchByUsername(username, callback) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: FETCH_BY_PLAYERNAME_REQUESTED\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.get(\"https://fortnite-public-api.theapinetwork.com/prod09/users/search\", {\n                  params: {\n                    username: username\n                  }\n                });\n\n              case 4:\n                response = _context.sent;\n                dispatch({\n                  type: FETCH_BY_PLAYERNAME_SUCCESS,\n                  payload: response.data.entries\n                });\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                dispatch({\n                  type: FETCH_BY_PLAYERNAME_FAILURE,\n                  payload: _context.t0\n                });\n\n              case 11:\n                callback();\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getUsernames =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(username, callback) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"https://fortnite-public-api.theapinetwork.com/prod09/users/search\", {\n              params: {\n                username: username\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            callback();\n            return _context2.abrupt(\"return\", response.data.entries);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function getUsernames(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getProfile =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(username) {\n    var platform,\n        window,\n        response,\n        uid,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            platform = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 'pc';\n            window = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 'season7';\n            _context3.next = 4;\n            return axios.get('https://fortnite-public-api.theapinetwork.com/prod09/users/id', {\n              params: {\n                username: username\n              }\n            });\n\n          case 4:\n            response = _context3.sent;\n            uid = response.data.uid;\n            _context3.next = 8;\n            return axios.get(\"https://fortnite-public-api.theapinetwork.com/prod09/users/public/br_stats\", {\n              params: {\n                user_id: uid,\n                platform: platform,\n                window: window\n              }\n            });\n\n          case 8:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function getProfile(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getNews =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    var language,\n        response,\n        _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            language = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : 'en';\n            _context4.next = 3;\n            return axios.get('https://fortnite-public-api.theapinetwork.com/prod09/br_motd/get', {\n              params: {\n                language: language\n              }\n            });\n\n          case 3:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function getNews() {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/kenny/Documents/GitHub/fortniteboards/src/actions/index.js"],"names":["axios","FETCH_BY_PLAYERNAME_REQUESTED","FETCH_BY_PLAYERNAME_SUCCESS","FETCH_BY_PLAYERNAME_FAILURE","fetchByUsername","username","callback","dispatch","type","get","params","response","payload","data","entries","getUsernames","getProfile","platform","window","uid","user_id","getNews","language"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n    FETCH_BY_PLAYERNAME_REQUESTED,\n    FETCH_BY_PLAYERNAME_SUCCESS,\n    FETCH_BY_PLAYERNAME_FAILURE\n} from './constants';\n\nexport const fetchByUsername = (username, callback) => {\n    return async dispatch => {\n        dispatch({ type: FETCH_BY_PLAYERNAME_REQUESTED });\n        try {\n            const response = await axios.get(\n                `https://fortnite-public-api.theapinetwork.com/prod09/users/search`,\n                { params: { username: username } }\n            );\n            dispatch({\n                type: FETCH_BY_PLAYERNAME_SUCCESS,\n                payload: response.data.entries\n            });\n        } catch (error) {\n            dispatch({\n                type: FETCH_BY_PLAYERNAME_FAILURE,\n                payload: error\n            });\n        }\n        callback();\n    };\n};\n\nexport const getUsernames = async (username, callback) => {\n    const response = await axios.get(\n        `https://fortnite-public-api.theapinetwork.com/prod09/users/search`,\n        { params: { username: username } }\n    );\n    callback();\n    return response.data.entries;\n};\n\nexport const getProfile = async (username, platform = 'pc', window = 'season7') => {\n    let response = await axios.get(\n        'https://fortnite-public-api.theapinetwork.com/prod09/users/id',\n        { params: { username: username } }\n    );\n\n    const { uid } = response.data;\n\n    response = await axios.get(\n        `https://fortnite-public-api.theapinetwork.com/prod09/users/public/br_stats`,\n        {\n            params: {\n                user_id: uid,\n                platform: platform,\n                window: window\n            }\n        }\n    );\n    return response.data;\n};\n\nexport const getNews = async (language = 'en') => {\n    let response = await axios.get(\n        'https://fortnite-public-api.theapinetwork.com/prod09/br_motd/get',\n        {\n            params: { language: language }\n        }\n    );\n\n    return response.data;\n};\n"]},"metadata":{},"sourceType":"module"}